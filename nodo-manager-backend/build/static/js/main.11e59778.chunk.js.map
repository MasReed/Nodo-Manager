{"version":3,"sources":["reducers/alertReducer.js","services/items.js","reducers/itemReducer.js","services/orders.js","reducers/orderReducer.js","services/users.js","reducers/userReducer.js","services/authentications.js","reducers/currentUserReducer.js","components/login-register-landing/GuestOption.js","utilities/charactersRemaining.js","utilities/findFormErrors.js","hooks/useForm.js","components/login-register-landing/LoginForm.js","components/login-register-landing/RegisterForm.js","components/login-register-landing/HomePage.js","components/site-wide/AlertBanner.js","reducers/modalReducer.js","components/items/UpdateItemForm.js","utilities/truncateString.js","components/items/ItemInfoCard.js","components/items/ItemsList.js","components/items/NewItemForm.js","components/site-wide/AccordionToggle.js","components/site-wide/CustomAccordion.js","components/items/ItemsPage.js","components/menu/MenuItemCard.js","components/menu/MenuCategoryAccordion.js","reducers/currentOrderReducer.js","components/menu/ItemCustomizationModal.js","components/menu/MenuPage.js","components/orders/OrderConfirmationPage.js","components/orders/Costs.js","components/orders/OrderDetailsForm.js","components/orders/OrderItems.js","components/orders/EditOrderModal.js","components/orders/OrderInfo.js","components/orders/OrdersList.js","components/orders/OrdersPage.js","components/orders/OrderPage.js","components/users/MyAccountPage.js","components/users/NewUserForm.js","components/users/UpdateUserForm.js","components/users/UserInfo.js","components/users/UsersList.js","components/users/UsersPage.js","components/site-wide/AlertVisWrapper.js","components/site-wide/AuthRoute.js","components/site-wide/ScrollToTop.js","components/site-wide/SiteFooter.js","hooks/useWindowSize.js","components/site-wide/LoginModal.js","components/site-wide/LoginButton.js","components/site-wide/LogoutButton.js","components/site-wide/SiteNavBar.js","App.js","store.js","reportWebVitals.js","index.js","configurations/formConfigs.js"],"names":["alertReducer","state","action","type","data","timerId","toastAlertCreator","alertObject","clearTimeout","dispatch","a","setTimeout","baseUrl","token","exps","setToken","newToken","getAll","config","headers","axios","get","then","response","err","message","variant","request","console","log","create","newObject","post","update","id","updatedObject","put","destroy","delete","itemReducer","map","item","_id","filter","addItemActionCreator","newContent","itemService","newItem","updateItemActionCreator","updatedItem","destroyItemActionCreator","orderReducer","order","addOrderActionCreator","orderContent","orderService","newOrder","updateOrderActionCreator","updatedContent","updatedOrder","deleteOrderActionCreator","userReducer","user","addUserActionCreator","newUserObject","currentUser","userService","newUser","updateUserActionCreator","updatedUserObject","updatedUser","deleteUserActionCreator","login","username","password","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","storedUser","parse","window","getItem","currentUserReducer","loginUserActionCreator","authServices","loggedInUser","logoutUserActionCreator","GuestOption","useDispatch","history","useHistory","handleGuest","alertObj","show","push","className","Button","disabled","onClick","charactersRemaining","str","limit","diff","length","findFormErrors","form","setFormProps","itemAvailability","itemCategory","itemDescription","itemIngredients","itemName","itemPrice","orderCategory","orderName","orderNotes","email","passcopy","roleName","usersName","newErrors","Object","keys","forEach","property","itemForms","isEmpty","errorMessage","maxLength","value","Number","isNaN","isNegative","orderForms","minLength","includes","userForms","noAtSymbol","mismatched","role","encompassedRoles","reqManager","reqAdmin","useForm","fields","useSelector","useState","setForm","errors","setErrors","initialState","field","Array","isArray","tempForm","entries","fieldKey","fieldValue","resetForm","isValidated","event","preventDefault","LoginForm","props","handleSubmitLogin","setShow","Form","Group","controlId","Label","Control","trimStart","toString","placeholder","onChange","target","isInvalid","Text","Feedback","RegisterForm","handleSubmitRegister","name","HomePage","Container","Row","Col","style","borderLeft","borderRight","borderColor","AlertBanner","alert","Alert","Heading","modalReducer","isVisible","visBool","UpdateItemForm","category","description","ingredients","join","price","availability","resetComponent","callUpdateItem","ingredientsArray","split","updatedItemObject","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","onSubmit","Check","inline","label","checked","Footer","truncateString","substring","ItemInfoCard","showUpdateForm","setShowUpdateForm","callDeleteItem","openUpdateItemModal","Card","Subtitle","Img","src","size","border","ItemList","items","xs","md","lg","NewItemForm","callCreateItem","newItemObject","dialogClassName","File","files","AccordionToggle","children","eventKey","decoratedOnClick","useAccordionToggle","tabIndex","onKeyDown","CustomAccordion","text","Accordion","Collapse","ItemsPage","categories","Set","showNewItemForm","setShowNewItemForm","openNewItemModal","ItemsList","MenuItemCard","setShowCustomize","setSelectedItem","callCustomizeModal","MenuCategoryAccordion","menuItems","currentOrderReducer","isUpdating","uniqueId","setCurrentOrder","orderObject","resetCurrentOrder","addItemToOrder","customItem","updateItemInOrder","setOrderUpdating","ItemCustomizationModal","checkedMods","setCheckedMods","modList","setModList","forName","setForName","notes","setNotes","useEffect","modIngredients","whos","ingredientsWithCheck","ingredient","updateCustomItem","customItemObject","addCustomItem","baseItemId","baseName","baseIngredients","basePrice","Math","random","scrollable","obj","defaultChecked","object","MenuPage","selectedItem","showCustomize","OrderConfirmationPage","Costs","setCosts","currentOrder","subTotal","setSubTotal","taxAmount","setTaxAmount","total","setTotal","TAX_RATE","getSubTotal","reduce","sum","val","getTaxAmount","round","getTotal","taxRate","OrderDetailsForm","ButtonGroup","toggle","ToggleButton","OrderItems","updateItem","find","deleteItem","deleteItemInOrder","EditOrderModal","costs","handleModalClose","doReset","handleAddingItems","handleUpdateSubmission","updatedOrderObject","OrderInfo","showUpdateOrderModal","setShowUpdateOrderModal","orderStatusColor","status","Complete","Canceled","changeOrderStatus","newStatusOrder","deleteOrder","updateOrderSequence","color","Date","updatedAt","toLocaleString","OrdersList","orders","sortedOrders","setSortedOrders","statusSortedOrders","ordersArray","sortBy","slice","sort","b","indexOf","sortByStatus","ascending","sortByUpdatedTime","OrdersPage","init","onErr","OrderPage","defaultName","itemWhosIndex","findIndex","elem","getDefaultOrderName","saveOrder","marginTop","MyAccountPage","NewUserForm","createUser","UpdateUserForm","updateUser","UserInfo","showUpdateModal","setShowUpdateModal","deleteUser","UsersList","users","sortedUsers","setSortedUsers","roleSortedUsers","usersArray","sortByRole","UsersPage","handleNewUserClick","AlertVisWrapper","modalOpen","AuthRoute","authGroup","userRoles","admin","manager","employee","guest","every","to","withRouter","unlisten","listen","scrollTo","SiteFooter","backgroundColor","height","Nav","Link","as","useWindowSize","width","undefined","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","LoginModal","fullscreen","href","LoginButton","LogoutButton","handleLogout","SiteNavBar","showLoginModal","setShowLoginModal","Navbar","collapseOnSelect","expand","sticky","bg","Brand","Toggle","aria-controls","some","group","App","resets","inits","minHeight","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","formGroups","reqEmployee","module","exports"],"mappings":"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","file":"static/js/main.11e59778.chunk.js","sourcesContent":["const alertReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_ALERT':\r\n    return action.data\r\n\r\n  case 'UNSET_ALERT': {\r\n    return null\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default alertReducer\r\n\r\n/* Display colored banner with message for user to see for 5 seconds */\r\nlet timerId = null\r\nexport const toastAlertCreator = (alertObject) => {\r\n  clearTimeout(timerId)\r\n\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'SET_ALERT',\r\n      data: alertObject,\r\n    })\r\n    timerId = setTimeout(() => dispatch({ type: 'UNSET_ALERT' }), 4500)\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/items'\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `${newToken}`\r\n}\r\n\r\n//\r\nconst getAll = () => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const request = axios.get(baseUrl, config)\r\n    return request.then((response) => response.data)\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const itemError = {\r\n        type: 'Error Gathering Items',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw itemError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst create = async (newObject) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const itemError = {\r\n        type: 'Error Creating Menu Item',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw itemError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst update = async (id, updatedObject) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.put(`${baseUrl}/${id}`, updatedObject, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const itemError = {\r\n        type: 'Error Updating Menu Item',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw itemError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst destroy = async (id) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const itemError = {\r\n        type: 'Error Deleting Menu Item',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw itemError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst exps = {\r\n  setToken, getAll, create, update, destroy,\r\n}\r\n\r\nexport default exps\r\n","import itemService from '../services/items'\r\n\r\nconst itemReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_ITEMS':\r\n    return action.data\r\n\r\n  case 'MAKE_ITEM':\r\n    return [...state, action.data]\r\n\r\n  case 'UPDATE_ITEM':\r\n    return state.map((item) => ((item._id !== action.data._id)\r\n      ? item\r\n      : action.data))\r\n\r\n  case 'DESTROY_ITEM':\r\n    return state.filter((item) => item._id !== action.data.id)\r\n\r\n  case 'RESET_ITEMS':\r\n    return []\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default itemReducer\r\n\r\nexport const initializeItems = () => async (dispatch) => {\r\n  const items = await itemService.getAll()\r\n  dispatch({\r\n    type: 'INIT_ITEMS',\r\n    data: items,\r\n  })\r\n}\r\n\r\nexport const addItemActionCreator = (newContent) => async (dispatch) => {\r\n  const newItem = await itemService.create(newContent)\r\n  dispatch({\r\n    type: 'MAKE_ITEM',\r\n    data: newItem,\r\n  })\r\n}\r\n\r\nexport const updateItemActionCreator = (id, updatedObject) => async (dispatch) => {\r\n  const updatedItem = await itemService.update(id, updatedObject)\r\n  dispatch({\r\n    type: 'UPDATE_ITEM',\r\n    data: updatedItem,\r\n  })\r\n}\r\n\r\nexport const destroyItemActionCreator = (id) => async (dispatch) => {\r\n  await itemService.destroy(id)\r\n  dispatch({\r\n    type: 'DESTROY_ITEM',\r\n    data: {\r\n      id,\r\n    },\r\n  })\r\n}\r\n\r\nexport const resetItems = () => ({\r\n  type: 'RESET_ITEMS',\r\n})\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/orders'\r\n\r\n//\r\nlet token = null\r\nconst setToken = (newToken) => { // Called by currentUserReducer\r\n  token = `${newToken}`\r\n}\r\n\r\n//\r\nconst getAll = () => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const request = axios.get(baseUrl, config)\r\n    return request.then((response) => response.data)\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const orderError = {\r\n        type: 'Error Gathering Orders',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw orderError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst create = async (newObject) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const orderError = {\r\n        type: 'Error Creating Order',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw orderError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst update = async (id, updatedObject) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.put(`${baseUrl}/${id}`, updatedObject, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const orderError = {\r\n        type: 'Error Updating Order',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw orderError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst destroy = async (id) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const orderError = {\r\n        type: 'Error Removing Order',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw orderError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst exps = {\r\n  setToken, getAll, create, update, destroy,\r\n}\r\n\r\nexport default exps\r\n","import orderService from '../services/orders'\r\n\r\nconst orderReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_ORDERS':\r\n    return action.data\r\n\r\n  case 'CREATE_ORDER':\r\n    return [...state, action.data]\r\n\r\n  case 'UPDATE_ORDER':\r\n    return state.map((order) => ((order._id !== action.data._id)\r\n      ? order\r\n      : action.data))\r\n\r\n  case 'DELETE_ORDER':\r\n    return state.filter((order) => order._id !== action.data.id)\r\n\r\n  case 'RESET_ORDERS':\r\n    return []\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default orderReducer\r\n\r\nexport const initializeOrders = () => async (dispatch) => {\r\n  const orders = await orderService.getAll()\r\n  dispatch({\r\n    type: 'INIT_ORDERS',\r\n    data: orders,\r\n  })\r\n}\r\n\r\nexport const addOrderActionCreator = (orderContent) => async (dispatch) => {\r\n  const newOrder = await orderService.create(orderContent)\r\n  dispatch({\r\n    type: 'CREATE_ORDER',\r\n    data: newOrder,\r\n  })\r\n}\r\n\r\nexport const updateOrderActionCreator = (id, updatedContent) => async (dispatch) => {\r\n  const updatedOrder = await orderService.update(id, updatedContent)\r\n  dispatch({\r\n    type: 'UPDATE_ORDER',\r\n    data: updatedOrder,\r\n  })\r\n}\r\n\r\nexport const deleteOrderActionCreator = (id) => async (dispatch) => {\r\n  await orderService.destroy(id)\r\n  dispatch({\r\n    type: 'DELETE_ORDER',\r\n    data: {\r\n      id,\r\n    },\r\n  })\r\n}\r\n\r\nexport const resetOrders = () => ({\r\n  type: 'RESET_ORDERS',\r\n})\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nlet token = null\r\nconst setToken = (newToken) => {\r\n  token = `${newToken}`\r\n}\r\n\r\n//\r\nconst getAll = () => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const request = axios.get(baseUrl, config)\r\n\r\n    return request.then((response) => response.data)\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const userError = {\r\n        type: 'Error Gathering Users',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw userError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst create = async (newObject) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.post(`${baseUrl}/signup`, newObject, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const userError = {\r\n        type: 'Error Creating User',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw userError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst update = async (id, updatedObject) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.put(`${baseUrl}/${id}`, updatedObject, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const userError = {\r\n        type: 'Error Updating User',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw userError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n//\r\nconst destroy = async (id) => {\r\n  try {\r\n    const config = {\r\n      headers: { 'x-access-token': token },\r\n    }\r\n\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const userError = {\r\n        type: 'Error Removing User',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw userError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst exps = {\r\n  setToken, getAll, create, update, destroy,\r\n}\r\n\r\nexport default exps\r\n","import userService from '../services/users'\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n\r\n  case 'CREATE_USER':\r\n    return [...state, action.data]\r\n\r\n  case 'UPDATE_USER':\r\n    return state.map((user) => ((user.id !== action.data.id)\r\n      ? user\r\n      : action.data))\r\n\r\n  case 'DELETE_USER':\r\n    return state.filter((user) => user.id !== action.data.id)\r\n\r\n  case 'RESET_USERS':\r\n    return []\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n\r\nexport const initializeUsers = () => async (dispatch) => {\r\n  const users = await userService.getAll()\r\n  dispatch({\r\n    type: 'INIT_USERS',\r\n    data: users,\r\n  })\r\n}\r\n\r\nexport const addUserActionCreator = (newUserObject, currentUser) => async (dispatch) => {\r\n  const newUser = await userService.create(newUserObject)\r\n  if (currentUser !== null) {\r\n    dispatch({\r\n      type: 'CREATE_USER',\r\n      data: newUser,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserActionCreator = (id, updatedUserObject) => async (dispatch) => {\r\n  const updatedUser = await userService.update(id, updatedUserObject)\r\n  dispatch({\r\n    type: 'UPDATE_USER',\r\n    data: updatedUser,\r\n  })\r\n}\r\n\r\nexport const deleteUserActionCreator = (id) => async (dispatch) => {\r\n  await userService.destroy(id)\r\n  dispatch({\r\n    type: 'DELETE_USER',\r\n    data: {\r\n      id,\r\n    },\r\n  })\r\n}\r\n\r\nexport const resetUsers = () => ({\r\n  type: 'RESET_USERS',\r\n})\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/authenticate'\r\n\r\n// Log user in and get token\r\nconst login = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/signin`, {\r\n      username,\r\n      password,\r\n    })\r\n\r\n    if (response.data.accessToken) {\r\n      localStorage.setItem('user', JSON.stringify(response.data))\r\n    }\r\n    return response.data\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const loginError = {\r\n        type: 'Login Error',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw loginError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n// remove user from local storage\r\nconst logout = async () => {\r\n  try {\r\n    await localStorage.removeItem('user')\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const logoutError = {\r\n        type: 'Logout Error',\r\n        message: err.response.data.message,\r\n        variant: 'warning',\r\n      }\r\n      throw logoutError\r\n    } else if (err.request) {\r\n      console.log('err.req', err.request)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst exps = { login, logout }\r\n\r\nexport default exps\r\n","import authServices from '../services/authentications'\r\nimport itemService from '../services/items'\r\nimport orderService from '../services/orders'\r\nimport userService from '../services/users'\r\n\r\nconst storedUser = JSON.parse(window.localStorage.getItem('loggedBlogappUser'))\r\n\r\nconst currentUserReducer = (state = storedUser, action) => {\r\n  switch (action.type) {\r\n  case 'SET_USER':\r\n    return action.data\r\n\r\n  case 'UNSET_USER':\r\n    return null\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default currentUserReducer\r\n\r\nexport const loginUserActionCreator = (username, password) => async (dispatch) => {\r\n  const loggedInUser = await authServices.login(username, password)\r\n  itemService.setToken(loggedInUser.accessToken)\r\n  orderService.setToken(loggedInUser.accessToken)\r\n  userService.setToken(loggedInUser.accessToken)\r\n  dispatch({\r\n    type: 'SET_USER',\r\n    data: loggedInUser,\r\n  })\r\n}\r\n\r\nexport const logoutUserActionCreator = () => async (dispatch) => {\r\n  await authServices.logout()\r\n  itemService.setToken(null)\r\n  orderService.setToken(null)\r\n  userService.setToken(null)\r\n  dispatch({\r\n    type: 'UNSET_USER',\r\n  })\r\n}\r\n\r\nexport const guestUserActionCreator = () => ({\r\n  type: 'SET_USER',\r\n  data: {\r\n    username: 'Guest',\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { guestUserActionCreator } from '../../reducers/currentUserReducer'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\n\r\nconst GuestOption = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleGuest = async () => {\r\n    try {\r\n      const alertObj = {\r\n        type: 'Hi!',\r\n        message: 'Continuing as guest...',\r\n        variant: 'primary',\r\n        show: true,\r\n      }\r\n\r\n      await dispatch(toastAlertCreator(alertObj))\r\n      await dispatch(guestUserActionCreator())\r\n\r\n      history.push('/menu')\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='m-auto p-0'>\r\n      <h5>- OR -</h5>\r\n      <hr className='mb-5' />\r\n\r\n      <Button\r\n        disabled\r\n        onClick={handleGuest}\r\n        className='btn-block'\r\n        variant='outline-secondary'\r\n      >\r\n        {'>'}\r\n      </Button>\r\n\r\n      <hr className='mt-5' />\r\n      <h5 className='px-5'>Continue As Guest</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuestOption\r\n","const charactersRemaining = (str, limit) => {\r\n  const diff = limit - str.length\r\n  return (diff < 21) ? `${diff} character(s) remaining` : null\r\n}\r\n\r\nexport default charactersRemaining\r\n","import { itemForms, orderForms, userForms } from '../configurations/formConfigs'\r\n\r\nconst findFormErrors = (form, currentUser, setFormProps) => {\r\n  const {\r\n    itemAvailability,\r\n    itemCategory,\r\n    itemDescription,\r\n    itemIngredients,\r\n    itemName,\r\n    itemPrice,\r\n    orderCategory,\r\n    orderName,\r\n    orderNotes,\r\n    email,\r\n    passcopy,\r\n    password,\r\n    roleName,\r\n    username,\r\n    usersName,\r\n  } = form\r\n\r\n  const newErrors = {}\r\n\r\n  Object.keys(form).forEach((property) => {\r\n    switch (property) {\r\n    // itemAvailability errors\r\n    case 'itemAvailability':\r\n      if (!itemAvailability || itemAvailability === '') {\r\n        newErrors.itemAvailability = itemForms.itemAvailability.isEmpty.errorMessage\r\n      }\r\n      break\r\n\r\n    // itemCategory errors\r\n    case 'itemCategory':\r\n      if (!itemCategory || itemCategory === '') {\r\n        newErrors.itemCategory = itemForms.itemCategory.isEmpty.errorMessage\r\n      } else if (itemCategory.length > itemForms.itemCategory.maxLength.value) {\r\n        newErrors.itemCategory = itemForms.itemCategory.maxLength.value\r\n      }\r\n      break\r\n\r\n    // itemDescription errors\r\n    case 'itemDescription':\r\n      if (itemDescription.length > itemForms.itemDescription.maxLength) {\r\n        newErrors.itemDescription = itemForms.itemDescription.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // itemIngredients errors\r\n    case 'itemIngredients':\r\n      if (itemIngredients.length > itemForms.itemIngredients.maxLength) {\r\n        newErrors.itemIngredients = itemForms.itemIngredients.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // itemName errors\r\n    case 'itemName':\r\n      if (!itemName || itemName === '') {\r\n        newErrors.itemName = itemForms.itemName.isEmpty.errorMessage\r\n      } else if (itemName.length > itemForms.itemName.maxLength) {\r\n        newErrors.itemName = itemForms.itemName.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // itemPrice errors\r\n    case 'itemPrice':\r\n      if (!itemPrice || itemPrice === '') {\r\n        newErrors.itemPrice = itemForms.itemPrice.isEmpty.errorMessage\r\n      } else if (typeof itemPrice !== 'number') {\r\n        if (Number.isNaN(Number(itemPrice))) {\r\n          newErrors.itemPrice = itemForms.itemPrice.isNaN.errorMessage\r\n        } else {\r\n          setFormProps('itemPrice', Number(itemPrice))\r\n\r\n          if (itemPrice < 0) {\r\n            newErrors.itemPrice = itemForms.itemPrice.isNegative.errorMessage\r\n          }\r\n        }\r\n      } else if (itemPrice < 0) {\r\n        newErrors.itemPrice = itemForms.itemPrice.isNegative.errorMessage\r\n      } else if (itemPrice.length > itemForms.itemPrice.maxLength.value) {\r\n        newErrors.itemPrice = itemForms.itemPrice.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // orderCategory errors\r\n    case 'orderCategory':\r\n      if (!orderCategory) {\r\n        newErrors.orderCategory = orderForms.orderCategory.errorMessage\r\n      }\r\n      break\r\n\r\n    // orderName errors\r\n    case 'orderName':\r\n      if (!orderName || orderName === '') {\r\n        newErrors.orderName = orderForms.orderName.isEmpty.errorMessage\r\n      } else if (orderName.length < orderForms.orderName.minLength.value) {\r\n        newErrors.orderName = orderForms.orderName.minLength.errorMessage\r\n      } else if (orderName.length > orderForms.orderName.maxLength.value) {\r\n        newErrors.orderName = orderForms.orderName.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // orderNotes errors\r\n    case 'orderNotes':\r\n      if (orderNotes.length > orderForms.orderNotes.maxLength.value) {\r\n        newErrors.orderNotes = orderForms.orderNotes.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // email errors\r\n    case 'email':\r\n      if (!email || email === '') {\r\n        newErrors.email = userForms.email.isEmpty.errorMessage\r\n      } else if (!email.includes('@')) {\r\n        newErrors.email = userForms.email.noAtSymbol.errorMessage\r\n      } else if (email.length < userForms.email.minLength.value) {\r\n        newErrors.email = userForms.email.minLength.errorMessage\r\n      } else if (email.length > userForms.email.maxLength.value) {\r\n        newErrors.email = userForms.email.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // passcopy errors\r\n    case 'passcopy':\r\n      if (!passcopy || passcopy === '') {\r\n        newErrors.passcopy = userForms.passcopy.isEmpty.errorMessage\r\n      } else if (passcopy !== password) {\r\n        newErrors.passcopy = userForms.passcopy.mismatched.errorMessage\r\n      }\r\n      break\r\n\r\n    // password errors\r\n    case 'password':\r\n      if (!password || password === '') {\r\n        newErrors.password = userForms.password.isEmpty.errorMessage\r\n      } else if (password.length > userForms.password.maxLength.value) {\r\n        newErrors.username = userForms.password.maxLength.errorMessage\r\n      } else if (password.length < userForms.password.minLength.value) {\r\n        newErrors.password = userForms.password.minLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // roleName errors\r\n    case 'roleName':\r\n      if (!roleName) {\r\n        newErrors.roleName = userForms.roleName.isEmpty.errorMessage\r\n      } else if (roleName === 'admin'\r\n      && !currentUser.role.encompassedRoles.includes('admin')) {\r\n        newErrors.roleName = userForms.roleName.reqAdmin.errorMessage\r\n      } else if (roleName === 'manager'\r\n      && !currentUser.role.encompassedRoles.includes('manager')) {\r\n        newErrors.roleName = userForms.roleName.reqManager.errorMessage\r\n      } else if (roleName === 'employee'\r\n      && !currentUser.role.encompassedRoles.includes('manager')) {\r\n        newErrors.roleName = userForms.roleName.reqManager.errorMessage\r\n      }\r\n      break\r\n\r\n    // username errors\r\n    case 'username':\r\n      if (!username || username === '') {\r\n        newErrors.username = userForms.username.isEmpty.errorMessage\r\n      } else if (username.length > userForms.username.maxLength.value) {\r\n        newErrors.username = userForms.username.maxLength.errorMessage\r\n      } else if (username.length < userForms.username.minLength.value) {\r\n        newErrors.username = userForms.username.minLength.errorMessage\r\n      }\r\n      break\r\n\r\n    // usersName errors\r\n    case 'usersName':\r\n      if (!usersName || usersName === '') {\r\n        newErrors.usersName = userForms.usersName.isEmpty.errorMessage\r\n      } else if (usersName.length > userForms.usersName.maxLength.value) {\r\n        newErrors.usersName = userForms.usersName.maxLength.errorMessage\r\n      }\r\n      break\r\n\r\n    default:\r\n      break\r\n    }\r\n  })\r\n  return newErrors\r\n}\r\n\r\nexport default findFormErrors\r\n","// Form validation built on work from:\r\n// https://github.com/AlecGrey/demo-form-for-blog\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport findFormErrors from '../utilities/findFormErrors'\r\n\r\nconst useForm = (fields = {}) => {\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n\r\n  const [form, setForm] = useState(fields)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const initialState = fields // Used to resetForm\r\n\r\n  //\r\n  const setFormProps = (field, value) => {\r\n    // Given single object with key/value pairs, 'maps' to property/value pairs\r\n    if (typeof field === 'object' && field !== null && !value) {\r\n      const tempForm = {}\r\n\r\n      Object.entries(field).map(([fieldKey, fieldValue]) => {\r\n        tempForm[fieldKey] = fieldValue\r\n        return null\r\n      })\r\n\r\n      setForm({ ...form, ...tempForm })\r\n\r\n    // Given array of properties and single value will set all properties to\r\n    // that one value\r\n    } else if (Array.isArray(field) && value) {\r\n      const tempForm = {}\r\n\r\n      field.map((property) => {\r\n        tempForm[property] = value\r\n        return null\r\n      })\r\n\r\n      setForm({ ...form, ...tempForm })\r\n\r\n    // Given field, value normally\r\n    } else {\r\n      setForm({\r\n        ...form,\r\n        [field]: value,\r\n      })\r\n      // Remove any errors from the error object\r\n      if (errors[field]) {\r\n        setErrors({\r\n          ...errors,\r\n          [field]: null,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    // Reset all form fields to the initial state passed in when the useForm\r\n    // hook is called.\r\n    setFormProps(initialState)\r\n    setErrors({})\r\n  }\r\n\r\n  //\r\n  const isValidated = (event) => {\r\n    if (event) event.preventDefault()\r\n\r\n    const newErrors = findFormErrors(form, currentUser, setFormProps)\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  return [form, setFormProps, errors, isValidated, resetForm]\r\n}\r\n\r\nexport default useForm\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { userForms } from '../../configurations/formConfigs'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport {\r\n  loginUserActionCreator,\r\n  logoutUserActionCreator,\r\n} from '../../reducers/currentUserReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nimport useForm from '../../hooks/useForm'\r\n\r\nconst LoginForm = ({ ...props }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const [form, setForm, errors, isValidated] = useForm(\r\n    { username: '', password: '' },\r\n  )\r\n\r\n  //\r\n  const handleSubmitLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (isValidated()) {\r\n      try {\r\n        await dispatch(logoutUserActionCreator())\r\n        await dispatch(loginUserActionCreator(form.username, form.password))\r\n\r\n        if (props.setShow) {\r\n          props.setShow(false)\r\n        }\r\n\r\n        history.push('/menu')\r\n      } catch (err) {\r\n        setForm('password', '')\r\n        await dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form id='login-form'>\r\n      {/* Login Username */}\r\n      <Form.Group controlId='username'>\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n          value={form.username.trimStart()}\r\n          minLength={userForms.username.minLength.value.toString()}\r\n          maxLength={userForms.username.maxLength.value.toString()}\r\n          placeholder='Username'\r\n          onChange={(event) => setForm('username', event.target.value)}\r\n          isInvalid={!!errors.username}\r\n        />\r\n        <Form.Text>\r\n          {charactersRemaining(\r\n            form.username, userForms.username.maxLength.value,\r\n          )}\r\n        </Form.Text>\r\n\r\n        <Form.Control.Feedback type='invalid'>\r\n          { errors.username }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      {/* Login Password */}\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          value={form.password.trimStart()}\r\n          minLength={userForms.password.minLength.value.toString()}\r\n          maxLength={userForms.password.maxLength.value.toString()}\r\n          placeholder='Password'\r\n          onChange={(event) => setForm('password', event.target.value)}\r\n          isInvalid={!!errors.password}\r\n        />\r\n        <Form.Text>\r\n          {charactersRemaining(\r\n            form.password, userForms.password.maxLength.value,\r\n          )}\r\n        </Form.Text>\r\n\r\n        <Form.Control.Feedback type='invalid'>\r\n          { errors.password }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      {/* Submit */}\r\n      <Button\r\n        id='login-submit-button'\r\n        type='submit'\r\n        onClick={handleSubmitLogin}\r\n      >\r\n        Login\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { userForms } from '../../configurations/formConfigs'\r\nimport useForm from '../../hooks/useForm'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { addUserActionCreator } from '../../reducers/userReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n\r\n  const [form, setForm, errors, isValidated] = useForm(\r\n    {\r\n      email: '', username: '', password: '', passcopy: '',\r\n    },\r\n  )\r\n\r\n  //\r\n  const handleSubmitRegister = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (isValidated()) {\r\n      try {\r\n        const newUser = {\r\n          name: form.username,\r\n          email: form.email,\r\n          username: form.username,\r\n          password: form.password,\r\n        }\r\n\r\n        await dispatch(addUserActionCreator(newUser, currentUser))\r\n\r\n        setForm(['email', 'username', 'password', 'passcopy'], '')\r\n\r\n        history.push('/menu')\r\n      } catch (err) {\r\n        setForm({\r\n          email: form.email,\r\n          username: form.username,\r\n          password: '',\r\n          passcopy: '',\r\n        })\r\n\r\n        await dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form id='register-form'>\r\n\r\n      {/* Email */}\r\n      <Form.Group controlId='register-email'>\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          value={form.email.trimStart()}\r\n          minLength={userForms.email.minLength.value.toString()}\r\n          maxLength={userForms.email.maxLength.value.toString()}\r\n          placeholder='Enter email'\r\n          onChange={({ target }) => setForm('email', target.value)}\r\n          isInvalid={!!errors.email}\r\n        />\r\n        <Form.Text>\r\n          {charactersRemaining(\r\n            form.email, userForms.email.maxLength.value,\r\n          )}\r\n        </Form.Text>\r\n\r\n        <Form.Control.Feedback type='invalid'>\r\n          { errors.email }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      {/* Username */}\r\n      <Form.Group controlId='register-username'>\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n          value={form.username.trimStart()}\r\n          minLength={userForms.username.minLength.value.toString()}\r\n          maxLength={userForms.username.maxLength.value.toString()}\r\n          placeholder='Username'\r\n          onChange={({ target }) => setForm('username', target.value)}\r\n          isInvalid={!!errors.username}\r\n        />\r\n        <Form.Text>\r\n          {charactersRemaining(\r\n            form.username, userForms.username.maxLength.value,\r\n          )}\r\n        </Form.Text>\r\n\r\n        <Form.Control.Feedback type='invalid'>\r\n          { errors.username }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      {/* Password */}\r\n      <Form.Group controlId='register-password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          value={form.password.trimStart()}\r\n          minLength={userForms.password.minLength.value.toString()}\r\n          maxLength={userForms.password.maxLength.value.toString()}\r\n          placeholder='Password'\r\n          onChange={({ target }) => setForm('password', target.value)}\r\n          isInvalid={!!errors.password}\r\n        />\r\n        <Form.Text>\r\n          {charactersRemaining(\r\n            form.password, userForms.password.maxLength.value,\r\n          )}\r\n        </Form.Text>\r\n\r\n        <Form.Control.Feedback type='invalid'>\r\n          { errors.password }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      {/* Password Copy */}\r\n      <Form.Group controlId='register-passcopy'>\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          value={form.passcopy.trimStart()}\r\n          minLength={userForms.password.minLength.value.toString()}\r\n          maxLength={userForms.password.maxLength.value.toString()}\r\n          placeholder='Password'\r\n          onChange={({ target }) => setForm('passcopy', target.value)}\r\n          isInvalid={!!errors.passcopy}\r\n        />\r\n        <Form.Text>\r\n          {charactersRemaining(\r\n            form.passcopy, userForms.password.maxLength.value,\r\n          )}\r\n        </Form.Text>\r\n\r\n        <Form.Control.Feedback type='invalid'>\r\n          { errors.passcopy }\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      {/* Submit Button */}\r\n      <Button\r\n        id='register-submit-button'\r\n        variant='primary'\r\n        type='submit'\r\n        onClick={handleSubmitRegister}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\n\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nimport GuestOption from './GuestOption'\r\nimport LoginForm from './LoginForm'\r\nimport RegisterForm from './RegisterForm'\r\n\r\nconst HomePage = () => (\r\n  <Container className='pt-5'>\r\n    <h1>Welcome!</h1>\r\n    <hr />\r\n\r\n    <Row>\r\n      {/* User Login */}\r\n      <Col className='p-5'>\r\n        <h2>Login</h2>\r\n        <hr />\r\n        <LoginForm />\r\n      </Col>\r\n\r\n      {/* Guest Login */}\r\n      <Col\r\n        className='my-5 px-5 d-flex align-items-center text-center'\r\n        style={{\r\n          borderLeft: '1px solid',\r\n          borderRight: '1px solid',\r\n          borderColor: 'rgba(0,0,0, 0.1)',\r\n        }}\r\n      >\r\n        <GuestOption />\r\n      </Col>\r\n\r\n      {/* Registration Form */}\r\n      <Col className='p-5'>\r\n        <h2>Register Today!</h2>\r\n        <hr />\r\n        <RegisterForm />\r\n      </Col>\r\n\r\n    </Row>\r\n  </Container>\r\n)\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst AlertBanner = () => {\r\n  const alertObject = useSelector((state) => state.alert)\r\n\r\n  // Banner not displayed if there is no message\r\n  if (!alertObject) {\r\n    return null\r\n  }\r\n\r\n  // Default Heading\r\n  if (!alertObject.type) {\r\n    alertObject.type = 'Alert!'\r\n  }\r\n\r\n  // Default color variant\r\n  if (alertObject && !alertObject.variant) {\r\n    alertObject.variant = 'warning'\r\n  }\r\n\r\n  return (\r\n    <Alert id='alert' className='sticky-top' variant={alertObject.variant}>\r\n      <Container>\r\n        <Alert.Heading>{alertObject.type}</Alert.Heading>\r\n        <hr />\r\n        <p>{alertObject.message}</p>\r\n      </Container>\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default AlertBanner\r\n","const modalReducer = (state = false, action) => {\r\n  /*\r\n    A reducer to keep track if any modal components is currently open or not\r\n  */\r\n  switch (action.type) {\r\n  case 'IS_VISIBLE':\r\n    return action.data\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default modalReducer\r\n\r\nexport const isVisible = (visBool) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'IS_VISIBLE',\r\n    data: visBool,\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport AlertBanner from '../site-wide/AlertBanner'\r\nimport useForm from '../../hooks/useForm'\r\nimport { itemForms } from '../../configurations/formConfigs'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { updateItemActionCreator } from '../../reducers/itemReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst UpdateItemForm = ({ item, show, setShow }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [form, setForm, errors, isValidated, resetForm] = useForm({\r\n    itemName: item.name,\r\n    itemCategory: item.category,\r\n    itemDescription: item.description,\r\n    itemIngredients: item.ingredients.join(', '),\r\n    itemPrice: item.price,\r\n    itemAvailability: item.availability,\r\n  })\r\n\r\n  //\r\n  const resetComponent = async () => {\r\n    resetForm()\r\n    setShow(false) // state from parent; closes modal\r\n    await dispatch(isVisible(false))\r\n  }\r\n\r\n  //\r\n  const callUpdateItem = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const ingredientsArray = Array.isArray(form.itemIngredients)\r\n      // convert comma-separated items into array if neccessary\r\n      ? form.itemIngredients\r\n      : form.itemIngredients.split(/\\s*(?:,|$)\\s*/)\r\n\r\n    // Check for any form errors\r\n    if (isValidated()) {\r\n      try {\r\n        const updatedItemObject = {\r\n          ...item,\r\n          name: form.itemName,\r\n          category: form.itemCategory,\r\n          description: form.itemDescription,\r\n          ingredients: ingredientsArray,\r\n          price: form.itemPrice,\r\n          availability: form.itemAvailability,\r\n        }\r\n\r\n        // Dispatch to item reducer\r\n        await dispatch(updateItemActionCreator(item._id, updatedItemObject))\r\n\r\n        resetComponent()\r\n      } catch (err) {\r\n        await dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={resetComponent}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {`Make Updates to ${item.name}`}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <AlertBanner />\r\n\r\n        <Modal.Body>\r\n          <Form id='updateItemForm' onSubmit={callUpdateItem}>\r\n\r\n            {/* Name */}\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemName}\r\n                maxLength={itemForms.itemName.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemName', target.value)}\r\n                isInvalid={!!errors.itemName}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemName, itemForms.itemName.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemName }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Category */}\r\n            <Form.Group>\r\n              <Form.Label>Category:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemCategory}\r\n                maxLength={itemForms.itemCategory.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemCategory', target.value)}\r\n                isInvalid={!!errors.itemCategory}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemCategory, itemForms.itemCategory.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemCategory }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Description */}\r\n            <Form.Group>\r\n              <Form.Label>Description:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemDescription}\r\n                maxLength={itemForms.itemDescription.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemDescription', target.value)}\r\n                isInvalid={!!errors.itemDescription}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemDescription, itemForms.itemDescription.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemDescription }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Ingredients */}\r\n            <Form.Group>\r\n              <Form.Label>Ingredients:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemIngredients}\r\n                maxLength={itemForms.itemIngredients.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemIngredients', target.value)}\r\n                placeholder='Separate with a comma'\r\n                isInvalid={!!errors.itemIngredients}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemIngredients, itemForms.itemIngredients.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemIngredients }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Price */}\r\n            <Form.Group>\r\n              <Form.Label>Price:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemPrice}\r\n                maxLength={itemForms.itemPrice.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemPrice', target.value)}\r\n                isInvalid={!!errors.itemPrice}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemPrice }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Availability */}\r\n            <Form.Group>\r\n              <Form.Label>Availability:</Form.Label>\r\n              <div className='px-4 d-flex justify-content-between'>\r\n                <Form.Check\r\n                  inline\r\n                  label='Available'\r\n                  name='availability'\r\n                  type='radio'\r\n                  id='inline-radio-available'\r\n                  checked={form.itemAvailability === 'Available'}\r\n                  value='Available'\r\n                  onChange={({ target }) => setForm('itemAvailability', target.value)}\r\n                  isInvalid={!!errors.itemAvailability}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label='Unavailable'\r\n                  name='availability'\r\n                  type='radio'\r\n                  id='inline-radio-unavailable'\r\n                  checked={form.itemAvailability === 'Unavailable'}\r\n                  value='Unavailable'\r\n                  onChange={({ target }) => setForm('itemAvailability', target.value)}\r\n                  isInvalid={!!errors.itemAvailability}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button type='submit' form='updateItemForm'>Save</Button>\r\n          <Button variant='secondary' onClick={resetComponent}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateItemForm\r\n","// Truncates strings with number of characters beyond maxLength and adds an\r\n// ellipses\r\n\r\nconst truncateString = (str, maxLength) => (str.length > maxLength ? `${str.substring(0, maxLength + 1)} ...` : str)\r\n\r\nexport default truncateString\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport UpdateItemForm from './UpdateItemForm'\r\n\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { destroyItemActionCreator } from '../../reducers/itemReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\n\r\nimport truncateString from '../../utilities/truncateString'\r\n\r\n//\r\nconst ItemInfoCard = ({ item }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [showUpdateForm, setShowUpdateForm] = useState(false)\r\n\r\n  //\r\n  const callDeleteItem = async (id) => {\r\n    try {\r\n      dispatch(destroyItemActionCreator(id))\r\n    } catch (err) {\r\n      dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  //\r\n  const openUpdateItemModal = async () => {\r\n    setShowUpdateForm(true)\r\n    await dispatch(isVisible(true))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card key={item._id} className='h-100'>\r\n\r\n        {/* Item name, category, price, description */}\r\n        <Card.Header className='m-0 py-3'>\r\n          <Card.Title className='d-flex justify-content-between'>\r\n            <Card.Text className='mb-0 mr-2 text-wrap text-break'>{item.name}</Card.Text>\r\n            <Card.Text className='mb-0 ml-2'>{`$${item.price}`}</Card.Text>\r\n          </Card.Title>\r\n\r\n          <Card.Subtitle className='mb-2 text-muted'>\r\n            {item.category}\r\n          </Card.Subtitle>\r\n\r\n          <Card.Text className='text-wrap text-break'>{item.description}</Card.Text>\r\n        </Card.Header>\r\n\r\n        {/* Item Image */}\r\n        <Card.Body className='m-0 pt-3 pb-0'>\r\n          <Card.Img src='/assets/burger.svg' />\r\n          <hr className='mb-0' />\r\n        </Card.Body>\r\n\r\n        {/* Ingredients */}\r\n        <Card.Body className='m-0 py-3'>\r\n          <Card.Text className='m-0 p-0'>\r\n            <u>Ingredients:</u>\r\n          </Card.Text>\r\n\r\n          <Card.Text className='m-0 p-0 text-wrap text-break'>\r\n            {\r\n              truncateString(item.ingredients.join(', '), 130)\r\n            }\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        {/* Item availability, Delete and Update Buttons */}\r\n        <Card.Footer className='m-0 py-3'>\r\n          <div className='d-flex justify-content-between'>\r\n            <h6 className='m-0 py-auto align-self-center'>{item.availability}</h6>\r\n\r\n            <Button\r\n              onClick={() => callDeleteItem(item._id)}\r\n              size='sm'\r\n              variant='outline-danger'\r\n              style={{ border: 'hidden' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={openUpdateItemModal}\r\n              className='px-4'\r\n              variant='primary'\r\n            >\r\n              Edit\r\n            </Button>\r\n\r\n          </div>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      {/* Modal Form Component */}\r\n      <UpdateItemForm\r\n        item={item}\r\n        show={showUpdateForm}\r\n        setShow={setShowUpdateForm}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemInfoCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nimport ItemInfoCard from './ItemInfoCard'\r\n\r\nconst ItemList = ({ category }) => {\r\n  const items = useSelector((state) => state.items)\r\n\r\n  return (\r\n    <Container>\r\n      <Row xs={1} md={2} lg={2}>\r\n        {/* Items with matching 'category' are rendered */}\r\n        {items.map((item) => (item.category === category\r\n          ? (\r\n            <Col key={item._id} className='mx-0 mb-4'>\r\n              <ItemInfoCard item={item} />\r\n            </Col>\r\n\r\n          )\r\n          : null))}\r\n      </Row>\r\n      <hr />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ItemList\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport AlertBanner from '../site-wide/AlertBanner'\r\nimport useForm from '../../hooks/useForm'\r\nimport { itemForms } from '../../configurations/formConfigs'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { addItemActionCreator } from '../../reducers/itemReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst NewItemForm = ({ show, setShow }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [form, setForm, errors, isValidated, resetForm] = useForm({\r\n    itemName: '',\r\n    itemCategory: '',\r\n    itemDescription: '',\r\n    itemIngredients: [],\r\n    itemPrice: '',\r\n    itemAvailability: 'Unavailable',\r\n  })\r\n\r\n  //\r\n  const resetComponent = async () => {\r\n    resetForm()\r\n    setShow(false) // state from parent; closes modal\r\n    await dispatch(isVisible(false))\r\n  }\r\n\r\n  //\r\n  const callCreateItem = async (event) => {\r\n    event.preventDefault()\r\n\r\n    // convert comma-separated items into array if neccessary\r\n    const ingredientsArray = Array.isArray(form.itemIngredients)\r\n      ? form.itemIngredients\r\n      : form.itemIngredients.split(/\\s*(?:,|$)\\s*/)\r\n\r\n    if (isValidated()) {\r\n      try {\r\n        const newItemObject = {\r\n          name: form.itemName,\r\n          category: form.itemCategory,\r\n          description: form.itemDescription,\r\n          ingredients: ingredientsArray,\r\n          price: form.itemPrice,\r\n          availability: form.itemAvailability,\r\n        }\r\n\r\n        // Dispatch to item reducer\r\n        await dispatch(addItemActionCreator(newItemObject))\r\n\r\n        resetComponent()\r\n      } catch (err) {\r\n        await dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={resetComponent}\r\n        backdrop='static'\r\n        keyboard={false}\r\n        dialogClassName='modal-70w'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Make A New Creation</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <AlertBanner />\r\n\r\n        <Modal.Body>\r\n          <Form id='newItemForm' onSubmit={callCreateItem}>\r\n\r\n            {/* Name */}\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemName}\r\n                maxLength={itemForms.itemName.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemName', target.value)}\r\n                isInvalid={!!errors.itemName}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemName, itemForms.itemName.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemName }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Category */}\r\n            <Form.Group>\r\n              <Form.Label>Category:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemCategory}\r\n                maxLength={itemForms.itemCategory.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemCategory', target.value)}\r\n                isInvalid={!!errors.itemCategory}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemCategory, itemForms.itemCategory.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemCategory }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Description */}\r\n            <Form.Group>\r\n              <Form.Label>Description:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemDescription}\r\n                maxLength={itemForms.itemDescription.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemDescription', target.value)}\r\n                isInvalid={!!errors.itemDescription}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemDescription, itemForms.itemDescription.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemDescription }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Ingredients */}\r\n            <Form.Group>\r\n              <Form.Label>Ingredients:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemIngredients}\r\n                maxLength={itemForms.itemIngredients.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemIngredients', target.value)}\r\n                placeholder='Separate with a comma'\r\n                isInvalid={!!errors.itemIngredients}\r\n              />\r\n              <Form.Text>\r\n                {charactersRemaining(\r\n                  form.itemIngredients, itemForms.itemIngredients.maxLength.value,\r\n                )}\r\n              </Form.Text>\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemIngredients }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Price */}\r\n            <Form.Group>\r\n              <Form.Label>Price:</Form.Label>\r\n              <Form.Control\r\n                value={form.itemPrice}\r\n                maxLength={itemForms.itemPrice.maxLength.value.toString()}\r\n                onChange={({ target }) => setForm('itemPrice', target.value)}\r\n                isInvalid={!!errors.itemPrice}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                { errors.itemPrice }\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Availability */}\r\n            <Form.Group>\r\n              <Form.Label>Availability:</Form.Label>\r\n              <div className='px-4 d-flex justify-content-between'>\r\n                <Form.Check\r\n                  inline\r\n                  label='Available'\r\n                  name='availability'\r\n                  type='radio'\r\n                  id='inline-radio-available'\r\n                  checked={form.itemAvailability === 'Available'}\r\n                  value='Available'\r\n                  onChange={({ target }) => setForm('itemAvailability', target.value)}\r\n                  isInvalid={!!errors.itemAvailability}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label='Unavailable'\r\n                  name='availability'\r\n                  type='radio'\r\n                  id='inline-radio-unavailable'\r\n                  checked={form.itemAvailability === 'Unavailable'}\r\n                  value='Unavailable'\r\n                  onChange={({ target }) => setForm('itemAvailability', target.value)}\r\n                  isInvalid={!!errors.itemAvailability}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {/* Image */}\r\n            <Form.Group>\r\n              {/* TODO: add functionality */}\r\n              <Form.File\r\n                id='itemImageFile'\r\n                label='Upload an item image'\r\n                onChange={(event) => console.log(event.target.files)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button type='submit' form='newItemForm'>Create Item</Button>\r\n          <Button variant='secondary' onClick={resetComponent}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewItemForm\r\n","import React from 'react'\r\n\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle'\r\n\r\nconst AccordionToggle = ({ children, eventKey }) => {\r\n  const decoratedOnClick = useAccordionToggle(eventKey)\r\n\r\n  return (\r\n    <div\r\n      type='button'\r\n      role='button'\r\n      tabIndex='0'\r\n      onClick={decoratedOnClick}\r\n      onKeyDown={decoratedOnClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccordionToggle\r\n","import React from 'react'\r\n\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport AccordionToggle from './AccordionToggle'\r\n\r\nconst CustomAccordion = ({ children, text }) => (\r\n  <Accordion>\r\n    <Card className='mb-2 border-0'>\r\n      <AccordionToggle eventKey='0'>\r\n        <h4 className='mtb-4 text-muted'>{text}</h4>\r\n        <hr />\r\n      </AccordionToggle>\r\n\r\n      <Accordion.Collapse eventKey='0'>\r\n        <Card.Body className='p-0'>\r\n\r\n          {children}\r\n\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n)\r\n\r\nexport default CustomAccordion\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport ItemsList from './ItemsList'\r\nimport NewItemForm from './NewItemForm'\r\n\r\nimport CustomAccordion from '../site-wide/CustomAccordion'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\n\r\nconst ItemsPage = () => {\r\n  const dispatch = useDispatch()\r\n  // Array of unique item categories\r\n  const categories = useSelector(\r\n    (state) => [...new Set(state.items.map((item) => item.category))],\r\n  )\r\n\r\n  const [showNewItemForm, setShowNewItemForm] = useState(false)\r\n\r\n  const openNewItemModal = async () => {\r\n    setShowNewItemForm(true)\r\n    await dispatch(isVisible(true))\r\n  }\r\n\r\n  return (\r\n    <Container className='pt-5'>\r\n\r\n      {/* Page Header & New Item Button */}\r\n      <div className='d-flex justify-content-between'>\r\n        <h1 className='m-0'>Cook Book</h1>\r\n        <Button\r\n          onClick={openNewItemModal}\r\n          variant='outline-secondary'\r\n        >\r\n          CREATE\r\n        </Button>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      {/* Category Accordions */}\r\n      {\r\n        categories.map((category) => (\r\n          <CustomAccordion key={category} text={category}>\r\n            <ItemsList category={category} />\r\n          </CustomAccordion>\r\n        ))\r\n      }\r\n\r\n      {/* Modal Form Component */}\r\n      <NewItemForm show={showNewItemForm} setShow={setShowNewItemForm} />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ItemsPage\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport truncateString from '../../utilities/truncateString'\r\n\r\nconst MenuItemCard = ({ item, setShowCustomize, setSelectedItem }) => {\r\n  const dispatch = useDispatch()\r\n  // call props to display customization modal\r\n  const callCustomizeModal = async () => {\r\n    setSelectedItem(item)\r\n    setShowCustomize(true)\r\n    await dispatch(isVisible(true))\r\n  }\r\n\r\n  return (\r\n    <Card key={item._id} className='h-100'>\r\n\r\n      {/* Item name, category, price, description */}\r\n      <Card.Header className='m-0 py-3'>\r\n        <Card.Title className='d-flex justify-content-between'>\r\n          <Card.Text className='mb-0 mr-2 text-wrap text-break'>{item.name}</Card.Text>\r\n          <Card.Text className='mb-0 ml-2'>{`$${item.price}`}</Card.Text>\r\n        </Card.Title>\r\n\r\n        <Card.Subtitle className='mb-2 text-muted'>\r\n          {item.category}\r\n        </Card.Subtitle>\r\n\r\n        <Card.Text className='text-wrap text-break'>{item.description}</Card.Text>\r\n      </Card.Header>\r\n\r\n      {/* Item Image */}\r\n      <Card.Body className='m-0 pt-3 pb-0'>\r\n        <Card.Img src='/assets/burger.svg' />\r\n        <hr className='mb-0' />\r\n      </Card.Body>\r\n\r\n      {/* Ingredients */}\r\n      <Card.Body className='m-0 py-3'>\r\n        <Card.Text className='m-0 p-0'>\r\n          <u>Ingredients:</u>\r\n        </Card.Text>\r\n\r\n        <Card.Text className='m-0 p-0 text-wrap text-break'>\r\n          {\r\n            truncateString(item.ingredients.join(', '), 130)\r\n          }\r\n        </Card.Text>\r\n      </Card.Body>\r\n\r\n      {/* Item availability, Delete and Update Buttons */}\r\n      <Card.Footer className='m-0 py-3'>\r\n        <div className='d-flex justify-content-between'>\r\n          <h6 className='m-0 py-auto align-self-center'>{item.availability}</h6>\r\n          {\r\n            (item.availability === 'Available')\r\n              ? <Button onClick={callCustomizeModal}>Make it Yours</Button>\r\n              : <Button disabled>Add to Order</Button>\r\n          }\r\n        </div>\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MenuItemCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nimport MenuItemCard from './MenuItemCard'\r\n\r\nimport CustomAccordion from '../site-wide/CustomAccordion'\r\n\r\nconst MenuCategoryAccordion = ({\r\n  category, setShowCustomize, setSelectedItem,\r\n}) => {\r\n  const menuItems = useSelector((state) => state.items)\r\n\r\n  return (\r\n    <CustomAccordion text={category}>\r\n      <Container>\r\n        <Row xs={1} md={2} lg={2}>\r\n          {menuItems.map((item) => (item.category === category\r\n            ? (\r\n              <Col key={item._id} className='mx-0 mb-4'>\r\n                <MenuItemCard\r\n                  item={item}\r\n                  setShowCustomize={setShowCustomize}\r\n                  setSelectedItem={setSelectedItem}\r\n                />\r\n              </Col>\r\n            )\r\n            : null))}\r\n        </Row>\r\n        <hr />\r\n      </Container>\r\n    </CustomAccordion>\r\n  )\r\n}\r\n\r\nexport default MenuCategoryAccordion\r\n","import orderService from '../services/orders'\r\n\r\nconst currentOrderReducer = (state = { items: [], isUpdating: false }, action) => {\r\n  switch (action.type) {\r\n  case 'INIT_ORDER':\r\n    return action.data\r\n\r\n  case 'SET_ORDER':\r\n    return action.data\r\n\r\n  case 'RESET_ORDER':\r\n    return { items: [], isUpdating: false }\r\n\r\n  case 'ADD_ORDER_ITEM':\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items, action.data,\r\n      ],\r\n    }\r\n\r\n  case 'UPDATE_ORDER_ITEM':\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.map((item) => (item.uniqueId !== action.data.uniqueId\r\n          ? item\r\n          : action.data)),\r\n      ],\r\n    }\r\n\r\n  case 'DELETE_ORDER_ITEM':\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.uniqueId !== action.data.id),\r\n      ],\r\n    }\r\n\r\n  case 'SET_ORDER_UPDATING':\r\n    return {\r\n      ...state,\r\n      isUpdating: action.data,\r\n    }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default currentOrderReducer\r\n\r\nexport const initializeCurrentOrder = () => async (dispatch) => {\r\n  const currentOrder = await orderService.create()\r\n  dispatch({\r\n    type: 'INIT_ORDER',\r\n    data: currentOrder,\r\n  })\r\n}\r\n\r\nexport const setCurrentOrder = (orderObject) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'SET_ORDER',\r\n    data: orderObject,\r\n  })\r\n}\r\n\r\nexport const resetCurrentOrder = () => async (dispatch) => {\r\n  dispatch({\r\n    type: 'RESET_ORDER',\r\n  })\r\n}\r\n\r\nexport const addItemToOrder = (customItem) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'ADD_ORDER_ITEM',\r\n    data: customItem,\r\n  })\r\n}\r\n\r\nexport const updateItemInOrder = (updatedObject) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'UPDATE_ORDER_ITEM',\r\n    data: updatedObject,\r\n  })\r\n}\r\n\r\nexport const deleteItemInOrder = (id) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'DELETE_ORDER_ITEM',\r\n    data: {\r\n      id,\r\n    },\r\n  })\r\n}\r\n\r\nexport const setOrderUpdating = (isUpdating) => async (dispatch) => {\r\n  dispatch({\r\n    type: 'SET_ORDER_UPDATING',\r\n    data: isUpdating,\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { addItemToOrder, updateItemInOrder } from '../../reducers/currentOrderReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst ItemCustomizationModal = ({\r\n  item, setItem, show, setShow, isUpdating,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [checkedMods, setCheckedMods] = useState([])\r\n  const [modList, setModList] = useState([])\r\n  const [forName, setForName] = useState('')\r\n  const [notes, setNotes] = useState('')\r\n\r\n  useEffect(() => {\r\n    setModList(item.modIngredients)\r\n    setForName(item.whos || '')\r\n    setNotes(item.notes || '')\r\n  }, [item])\r\n\r\n  useEffect(() => {\r\n    const ingredientsWithCheck = item.ingredients\r\n      ? item.ingredients.map((ingredient) => ({ ingredient, checked: true }))\r\n      : {}\r\n\r\n    setCheckedMods(ingredientsWithCheck)\r\n  }, [item])\r\n\r\n  //\r\n  const resetComponent = async () => {\r\n    setForName('')\r\n    setNotes('')\r\n    setModList([])\r\n    setItem({})\r\n    setShow(false)\r\n    await dispatch(isVisible(false))\r\n  }\r\n\r\n  //\r\n  const updateCustomItem = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const customItemObject = {\r\n        ...item,\r\n        modIngredients: modList,\r\n        whos: forName,\r\n        notes,\r\n      }\r\n\r\n      await dispatch(updateItemInOrder(customItemObject))\r\n\r\n      resetComponent()\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  //\r\n  const addCustomItem = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const customItemObject = {\r\n        baseItemId: item._id,\r\n        baseName: item.name,\r\n        baseIngredients: item.ingredients,\r\n        basePrice: item.price,\r\n        modIngredients: checkedMods,\r\n        whos: forName,\r\n        notes,\r\n        uniqueId: item.uniqueId || item._id + forName + Math.random(),\r\n      }\r\n\r\n      await dispatch(addItemToOrder(customItemObject))\r\n\r\n      await resetComponent()\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={resetComponent}\r\n      dialogClassName='modal-60w'\r\n      backdrop='static'\r\n      keyboard={false}\r\n      scrollable\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {`Customizing Your ${item.baseName}`}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form id='updateCustomItemForm'>\r\n\r\n          {/* Item For Name */}\r\n          <Form.Group>\r\n            <Form.Label>{'Who\\'s is it?'}</Form.Label>\r\n            <Form.Control\r\n              value={forName.trimStart()}\r\n              maxLength='30'\r\n              onChange={({ target }) => setForName(target.value)}\r\n            />\r\n            <Form.Text>{charactersRemaining(forName, 30)}</Form.Text>\r\n          </Form.Group>\r\n\r\n          {/* Ingredient Mods */}\r\n          <Form.Group>\r\n            <Form.Label>Comes With</Form.Label>\r\n            {\r\n              item.modIngredients\r\n                ? item.modIngredients.map((obj) => (\r\n                  <Form.Check\r\n                    key={obj.ingredient}\r\n                    id={obj.ingredient}\r\n                    type='checkbox'\r\n                    label={obj.ingredient}\r\n                    defaultChecked={obj.checked}\r\n                    onChange={(event) => {\r\n                      setModList(modList.map((object) => (object.ingredient === event.target.id\r\n                        ? { ...object, checked: event.target.checked }\r\n                        : object)))\r\n                    }}\r\n                  />\r\n                ))\r\n                : item.ingredients\r\n                && item.ingredients.map((ingredient) => (\r\n                  <Form.Check\r\n                    key={ingredient}\r\n                    id={ingredient}\r\n                    type='checkbox'\r\n                    label={ingredient}\r\n                    defaultChecked\r\n                    onChange={(event) => {\r\n                      setCheckedMods(checkedMods.map(\r\n                        (object) => (object.ingredient === event.target.id\r\n                          ? { ...object, checked: event.target.checked }\r\n                          : object),\r\n                      ))\r\n                    }}\r\n                  />\r\n                ))\r\n            }\r\n          </Form.Group>\r\n\r\n          {/* Notes */}\r\n          <Form.Group>\r\n            <Form.Label>Anything else we should know?</Form.Label>\r\n            <Form.Control\r\n              value={notes}\r\n              maxLength='150'\r\n              placeholder='e.g. peanut allergy'\r\n              onChange={({ target }) => setNotes(target.value)}\r\n            />\r\n            <Form.Text>{notes && charactersRemaining(notes, 150)}</Form.Text>\r\n          </Form.Group>\r\n\r\n        </Form>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer className='d-flex justify-content-between'>\r\n        <Button\r\n          variant='outline-warning'\r\n          onClick={resetComponent}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        {\r\n          isUpdating\r\n            ? <Button onClick={updateCustomItem}>Update</Button>\r\n            : <Button onClick={addCustomItem}>Add to Order</Button>\r\n        }\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ItemCustomizationModal\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport MenuCategoryAccordion from './MenuCategoryAccordion'\r\nimport ItemCustomizationModal from './ItemCustomizationModal'\r\n\r\nconst MenuPage = () => {\r\n  const history = useHistory()\r\n\r\n  // Array of unique item categories\r\n  const categories = useSelector(\r\n    (state) => [...new Set(state.items.map((item) => item.category))],\r\n  )\r\n\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [showCustomize, setShowCustomize] = useState(false)\r\n\r\n  return (\r\n    <Container className='pt-5'>\r\n      <div className='d-flex justify-content-between'>\r\n        <h1 className='m-0'>Menu</h1>\r\n        <Button onClick={() => history.push('/my-order')} variant='outline-secondary'>\r\n          My Order\r\n        </Button>\r\n      </div>\r\n      <hr />\r\n\r\n      {/* Dropdown accordions for each category */}\r\n      {\r\n        categories.map((category) => (\r\n          <MenuCategoryAccordion\r\n            key={category}\r\n            category={category}\r\n            setShowCustomize={setShowCustomize}\r\n            setSelectedItem={setSelectedItem}\r\n          />\r\n        ))\r\n      }\r\n\r\n      {/* Item customization modal component */}\r\n      <ItemCustomizationModal\r\n        item={selectedItem}\r\n        setItem={setSelectedItem}\r\n        show={showCustomize}\r\n        setShow={setShowCustomize}\r\n      />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MenuPage\r\n","import React from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst OrderConfirmationPage = () => (\r\n  <Container className='pt-5'>\r\n    <h1 className='m-0'>Order Confirmation</h1>\r\n    <hr />\r\n    <h4>Your Order Has Been Confirmed</h4>\r\n  </Container>\r\n)\r\n\r\nexport default OrderConfirmationPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Costs = ({ setCosts }) => {\r\n  const currentOrder = useSelector((state) => state.currentOrder)\r\n\r\n  const [subTotal, setSubTotal] = useState(0)\r\n  const [taxAmount, setTaxAmount] = useState(0)\r\n  const [total, setTotal] = useState(0)\r\n  const TAX_RATE = 0.07\r\n\r\n  useEffect(() => {\r\n    if (currentOrder.items && currentOrder.items.length > 0) {\r\n      const getSubTotal = currentOrder.items\r\n        .map((item) => item.basePrice)\r\n        .reduce((sum, val) => (sum + val))\r\n      const getTaxAmount = Math.round(getSubTotal * TAX_RATE * 100) / 100\r\n      const getTotal = ((getSubTotal + getTaxAmount) * 100) / 100\r\n\r\n      setSubTotal(getSubTotal)\r\n      setTaxAmount(getTaxAmount)\r\n      setTotal(getTotal)\r\n\r\n      setCosts({\r\n        getSubTotal,\r\n        taxRate: TAX_RATE,\r\n        getTaxAmount,\r\n        getTotal,\r\n      })\r\n    }\r\n  }, [currentOrder.items, setCosts])\r\n\r\n  return (\r\n    <div className='d-flex justify-content-between flex-wrap'>\r\n      <div className='mr-2 text-left'>\r\n        <h6 className='m-0 p-0'>Sub Total:</h6>\r\n        <p className='m-0 p-0'><small>Tax Rate:</small></p>\r\n        <h6 className='m-0 py-0'>Tax Amount:</h6>\r\n      </div>\r\n      <div className='ml-2 text-right'>\r\n        <h6 className='m-0 p-0'>\r\n          $\r\n          {subTotal}\r\n        </h6>\r\n        <p className='m-0 p-0'>\r\n          <small>\r\n            x\r\n            {TAX_RATE}\r\n          </small>\r\n        </p>\r\n        <h6 className='m-0 p-0'>\r\n          $\r\n          {taxAmount}\r\n        </h6>\r\n      </div>\r\n      <h4 className='m-0 ml-auto mt-auto pt-auto font-weight-bold text-right'>\r\n        Total: $\r\n        {total}\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Costs\r\n","import React from 'react'\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\n\r\nimport { orderForms } from '../../configurations/formConfigs'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst OrderDetailsForm = ({ form, setForm, errors }) => (\r\n  <Form id='OrderDetailsForm'>\r\n    {/* Order Category */}\r\n    <Form.Group>\r\n      <ButtonGroup toggle>\r\n        <ToggleButton\r\n          type='radio'\r\n          name='carry-out-toggle'\r\n          variant='outline-primary'\r\n          value={form.orderCategory}\r\n          checked={form.orderCategory === 'Carry Out'}\r\n          onChange={() => setForm('orderCategory', 'Carry Out')}\r\n        >\r\n          Carry Out\r\n        </ToggleButton>\r\n\r\n        <ToggleButton\r\n          type='radio'\r\n          name='delivery-toggle'\r\n          variant='outline-primary'\r\n          value={form.orderCategory}\r\n          checked={form.orderCategory === 'Delivery'}\r\n          onChange={() => setForm('orderCategory', 'Delivery')}\r\n        >\r\n          Delivery\r\n        </ToggleButton>\r\n      </ButtonGroup>\r\n\r\n      <Form.Text>\r\n        {`${form.orderCategory} selected.`}\r\n      </Form.Text>\r\n\r\n      <Form.Control.Feedback type='invalid'>\r\n        { errors.orderCategory }\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n\r\n    <Form.Row className='ml-0 mr-0'>\r\n      <Col lg='auto' className='pl-0'>\r\n\r\n        {/* Order Name */}\r\n        <Form.Group>\r\n          <Form.Label>Name: </Form.Label>\r\n          <Form.Control\r\n            value={form.orderName.trimStart()}\r\n            minLength={orderForms.orderName.minLength.value.toString()}\r\n            maxLength={orderForms.orderName.maxLength.value.toString()}\r\n            onChange={({ target }) => setForm('orderName', target.value)}\r\n            placeholder='e.g. Jane Doe'\r\n            isInvalid={!!errors.orderName}\r\n          />\r\n          <Form.Text>\r\n            {charactersRemaining(\r\n              form.orderName, orderForms.orderName.maxLength.value,\r\n            )}\r\n          </Form.Text>\r\n\r\n          <Form.Control.Feedback type='invalid'>\r\n            { errors.orderName }\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Col>\r\n\r\n      <Col className='pr-0'>\r\n\r\n        {/* Order Notes */}\r\n        <Form.Group>\r\n          <Form.Label>Order Notes:</Form.Label>\r\n          <Form.Control\r\n            value={form.orderNotes.trimStart()}\r\n            maxLength={orderForms.orderNotes.maxLength.value.toString()}\r\n            onChange={({ target }) => setForm('orderNotes', target.value)}\r\n            isInvalid={!!errors.orderNotes}\r\n          />\r\n          <Form.Text>\r\n            {charactersRemaining(\r\n              form.orderNotes, orderForms.orderNotes.maxLength.value,\r\n            )}\r\n          </Form.Text>\r\n\r\n          <Form.Control.Feedback type='invalid'>\r\n            { errors.orderNotes }\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Col>\r\n    </Form.Row>\r\n  </Form>\r\n)\r\n\r\nexport default OrderDetailsForm\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport { deleteItemInOrder } from '../../reducers/currentOrderReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\n\r\nconst OrderItems = ({ setSelectedItem, setShowCustomize }) => {\r\n  const dispatch = useDispatch()\r\n  const items = useSelector((state) => state.currentOrder.items)\r\n\r\n  //\r\n  const updateItem = async (id) => {\r\n    setSelectedItem(items.find((item) => item.uniqueId === id))\r\n    setShowCustomize(true)\r\n    await dispatch(isVisible(true))\r\n  }\r\n\r\n  //\r\n  const deleteItem = (id) => {\r\n    dispatch(deleteItemInOrder(id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (items && items.length > 0) && items.map((item) => (\r\n          <div key={item.uniqueId}>\r\n            <div>\r\n\r\n              {/* Item Name, Orderee's Name */}\r\n              <div className='d-flex justify-content-between'>\r\n                <h2 className='my-0 py-2'>{item.baseName}</h2>\r\n                <h2 className='my-0 py-2 text-capitalize'>{item.whos}</h2>\r\n              </div>\r\n\r\n              {/* Item Ingrediends & Exclusions */}\r\n              <div className='my-0'>\r\n                <h6 className='my-0 pt-2 pb-1'>Ingredients:</h6>\r\n                <p className='my-0 px-4 py-0'>\r\n                  {item.modIngredients.filter((obj) => obj.checked).map((obj) => obj.ingredient).join(', ')}\r\n                </p>\r\n                <p className='my-0 px-4 py-0'>\r\n                  <small>\r\n                    {`Exclusions: ${item.modIngredients\r\n                      .filter((obj) => !obj.checked)\r\n                      .map((obj) => obj.ingredient)\r\n                      .join(', ')}`}\r\n                  </small>\r\n                </p>\r\n\r\n                {/* Display item notes, if any */}\r\n                {\r\n                  item.notes\r\n                  && (\r\n                    <>\r\n                      <h6 className='my-0 py-2'>Notes:</h6>\r\n                      <p className='my-0 px-4 py-0'>{item.notes}</p>\r\n                    </>\r\n                  )\r\n                }\r\n              </div>\r\n\r\n              {/* Item Modification Buttons & Item Total */}\r\n              <div className='d-flex justify-content-between'>\r\n                <div className='my-auto'>\r\n                  {/* Remove Item Button */}\r\n                  <Button\r\n                    onClick={() => deleteItem(item.uniqueId)}\r\n                    variant='outline-danger'\r\n                    size='sm'\r\n                    style={{ border: 'hidden' }}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n\r\n                  {/* Edit Item Button */}\r\n                  <Button\r\n                    onClick={() => updateItem(item.uniqueId)}\r\n                    variant='outline-secondary'\r\n                    size='sm'\r\n                    style={{ border: 'hidden' }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </div>\r\n\r\n                {/* Item Total */}\r\n                <p className='my-0 py-2'>\r\n                  {`Item Total: $${item.basePrice}`}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <hr className='mt-0' />\r\n          </div>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderItems\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport AlertBanner from '../site-wide/AlertBanner'\r\nimport Costs from './Costs'\r\nimport OrderDetailsForm from './OrderDetailsForm'\r\nimport OrderItems from './OrderItems'\r\nimport ItemCustomizationModal from '../menu/ItemCustomizationModal'\r\n\r\nimport useForm from '../../hooks/useForm'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { resetCurrentOrder, setOrderUpdating } from '../../reducers/currentOrderReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport { updateOrderActionCreator } from '../../reducers/orderReducer'\r\n\r\nconst EditOrderModal = ({ order, show, setShow }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const currentOrder = useSelector((state) => state.currentOrder)\r\n\r\n  const [form, setForm, errors, isValidated, resetForm] = useForm({\r\n    orderCategory: order.category,\r\n    orderName: order.name,\r\n    orderNotes: order.notes,\r\n  })\r\n\r\n  const [showCustomize, setShowCustomize] = useState(false)\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [costs, setCosts] = useState(order.costs)\r\n\r\n  //\r\n  const handleModalClose = async (doReset = true) => {\r\n    await dispatch(resetCurrentOrder())\r\n    await dispatch(isVisible(false))\r\n    if (doReset) {\r\n      resetForm()\r\n    }\r\n    setShow(false)\r\n  }\r\n\r\n  //\r\n  const handleAddingItems = async () => {\r\n    await dispatch(isVisible(false))\r\n    await dispatch(setOrderUpdating(true))\r\n    history.push('/menu')\r\n  }\r\n\r\n  //\r\n  const handleUpdateSubmission = async (event) => {\r\n    event.preventDefault()\r\n\r\n    // Check for any form errors\r\n    if (isValidated()) {\r\n      try {\r\n        const updatedOrderObject = {\r\n          category: form.orderCategory,\r\n          items: currentOrder.items,\r\n          name: form.orderName,\r\n          notes: form.orderNotes,\r\n          costs: {\r\n            subTotal: costs.subTotal,\r\n            taxRate: costs.taxRate,\r\n            taxAmount: costs.taxAmount,\r\n            total: costs.total,\r\n          },\r\n        }\r\n\r\n        await dispatch(\r\n          updateOrderActionCreator(order._id, updatedOrderObject),\r\n        )\r\n\r\n        // Set to form inputs vs reset to original order properties\r\n        setForm({\r\n          orderCategory: form.orderCategory,\r\n          orderName: form.orderName,\r\n          orderNotes: form.orderNotes,\r\n        })\r\n\r\n        handleModalClose(false) // Cleanup all but form\r\n        dispatch(setOrderUpdating(false))\r\n      } catch (err) {\r\n        await dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleModalClose}\r\n        dialogClassName='modal-60w'\r\n        backdrop='static'\r\n        keyboard={false}\r\n        scrollable\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {`Editing ${order.name}'s Order`}\r\n            <h6>\r\n              {`ID: ${order._id}`}\r\n            </h6>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <AlertBanner />\r\n\r\n        <Modal.Body>\r\n\r\n          {/* Order Form with Category, Name, Notes */}\r\n          <OrderDetailsForm\r\n            form={form}\r\n            setForm={setForm}\r\n            errors={errors}\r\n          />\r\n\r\n          <hr />\r\n\r\n          {/* List of Items in Order */}\r\n          <OrderItems\r\n            setSelectedItem={setSelectedItem}\r\n            setShowCustomize={setShowCustomize}\r\n          />\r\n\r\n          {/* Order Costs Display */}\r\n          <Costs setCosts={setCosts} />\r\n\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer className='d-flex justify-content-between'>\r\n          {/* Cancel */}\r\n          <Button variant='outline-warning' onClick={handleModalClose}>\r\n            Cancel\r\n          </Button>\r\n\r\n          <div>\r\n            {/* Add Items */}\r\n            <Button\r\n              className='mx-2'\r\n              variant='outline-secondary'\r\n              onClick={handleAddingItems}\r\n            >\r\n              Add Items\r\n            </Button>\r\n\r\n            {/* Save */}\r\n            <Button\r\n              className='mx-2'\r\n              onClick={handleUpdateSubmission}\r\n            >\r\n              Save Updates\r\n            </Button>\r\n          </div>\r\n\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n\r\n      <ItemCustomizationModal\r\n        item={selectedItem}\r\n        setItem={setSelectedItem}\r\n        show={showCustomize}\r\n        setShow={setShowCustomize}\r\n        isUpdating\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditOrderModal\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport EditOrderModal from './EditOrderModal'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { setCurrentOrder, setOrderUpdating } from '../../reducers/currentOrderReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport {\r\n  updateOrderActionCreator,\r\n  deleteOrderActionCreator,\r\n} from '../../reducers/orderReducer'\r\n\r\nconst OrderInfo = ({ order }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [showUpdateOrderModal, setShowUpdateOrderModal] = useState(false)\r\n\r\n  //\r\n  const orderStatusColor = (status) => {\r\n    const colorMap = {\r\n      'In Progress': '#0062cc',\r\n      Complete: '#28a745',\r\n      Canceled: '#dc3545',\r\n    }\r\n    return colorMap[status]\r\n  }\r\n\r\n  //\r\n  const changeOrderStatus = async (orderObject) => {\r\n    try {\r\n      let newStatusOrder\r\n\r\n      if (orderObject.status === 'Complete') {\r\n        newStatusOrder = {\r\n          ...orderObject,\r\n          status: 'In Progress',\r\n        }\r\n      } else {\r\n        newStatusOrder = {\r\n          ...orderObject,\r\n          status: 'Complete',\r\n        }\r\n      }\r\n\r\n      await dispatch(updateOrderActionCreator(order._id, newStatusOrder))\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  //\r\n  const deleteOrder = async (id) => {\r\n    try {\r\n      await dispatch(deleteOrderActionCreator(id))\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  //\r\n  const updateOrderSequence = async () => {\r\n    await dispatch(setCurrentOrder(order))\r\n    try {\r\n      await setShowUpdateOrderModal(true)\r\n      await dispatch(setOrderUpdating(true))\r\n      await dispatch(isVisible(true))\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between' style={{ color: orderStatusColor(order.status) }}>\r\n        <div>\r\n          <h2>{order.name}</h2>\r\n          <h6>{`ID: ${order._id}`}</h6>\r\n        </div>\r\n        <div>\r\n          <h2 style={{ color: orderStatusColor(order.status) }}>{order.status}</h2>\r\n          <p>\r\n            <small>\r\n              {`Updated: ${new Date(order.updatedAt).toLocaleString()}`}\r\n            </small>\r\n          </p>\r\n        </div>\r\n        <div />\r\n        <div className='text-right'>\r\n          <h2>{order.category}</h2>\r\n          <h4>{`Items: ${order.items && order.items.length}`}</h4>\r\n        </div>\r\n      </div>\r\n\r\n      <p>\r\n        {`Notes: ${order.notes}`}\r\n      </p>\r\n\r\n      <div className='d-flex justify-content-between'>\r\n        <div className='align-self-center'>\r\n\r\n          {/* Remove Order */}\r\n          <Button\r\n            onClick={() => deleteOrder(order._id)}\r\n            variant='outline-danger'\r\n            size='sm'\r\n            style={{ border: 'hidden' }}\r\n            className='mr-5 px-2'\r\n          >\r\n            Remove\r\n          </Button>\r\n\r\n          {/* Edit Order */}\r\n          <Button\r\n            onClick={updateOrderSequence}\r\n            variant='outline-secondary'\r\n            size='sm'\r\n            style={{ border: 'hidden' }}\r\n            className='mx-2 px-5'\r\n            disabled={order.status === 'Complete'}\r\n          >\r\n            Edit\r\n          </Button>\r\n\r\n          {/* Update Status */}\r\n          <Button\r\n            onClick={() => changeOrderStatus(order)}\r\n            variant='outline-success'\r\n            size='sm'\r\n            style={{ border: 'hidden' }}\r\n            className='mx-2 px-5'\r\n          >\r\n            {order.status === 'In Progress'\r\n              ? 'Mark as \\'Complete\\''\r\n              : 'Mark as \\'In Progress\\''}\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Order Cost Details */}\r\n        <div className='mx-2'>\r\n          <p className='m-0'>\r\n            {`Subtotal: ${order.costs.subTotal}`}\r\n          </p>\r\n          <p className='m-0 text-right'>\r\n            {`Total: ${order.costs.total}`}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      {/* Modal Component */}\r\n      <EditOrderModal\r\n        order={order}\r\n        show={showUpdateOrderModal}\r\n        setShow={setShowUpdateOrderModal}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderInfo\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport OrderInfo from './OrderInfo'\r\n\r\nconst OrdersList = ({ orders }) => {\r\n  const [sortedOrders, setSortedOrders] = useState(orders)\r\n\r\n  //\r\n  const sortByUpdatedTime = (ordersArray, ascending = true) => ordersArray\r\n    .slice().sort((a, b) => {\r\n      if (ascending) {\r\n        return new Date(b.updatedAt) - new Date(a.updatedAt)\r\n      }\r\n      return new Date(a.updatedAt) - new Date(b.updatedAt)\r\n    })\r\n\r\n  //\r\n  const sortByStatus = (ordersArray) => {\r\n    const sortBy = ['In Progress', 'Complete']\r\n    return ordersArray.slice().sort((a, b) => (\r\n      sortBy.indexOf(a.status) - sortBy.indexOf(b.status)\r\n    ))\r\n  }\r\n\r\n  //\r\n  useEffect(() => {\r\n    const timeSortedOrders = sortByUpdatedTime(orders)\r\n    const statusSortedOrders = sortByStatus(timeSortedOrders)\r\n\r\n    setSortedOrders(statusSortedOrders)\r\n  }, [orders])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        orders && sortedOrders.map((order) => (\r\n          <OrderInfo\r\n            key={order._id}\r\n            order={order}\r\n          />\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrdersList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport OrdersList from './OrdersList'\r\nimport ItemCustomizationModal from '../menu/ItemCustomizationModal'\r\n\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { initializeOrders } from '../../reducers/orderReducer'\r\n\r\nconst OrdersPage = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const currentOrder = useSelector((state) => state.currentOrder)\r\n  const orders = useSelector((state) => state.orders)\r\n\r\n  const [showCustomize, setShowCustomize] = useState(false)\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await dispatch(initializeOrders())\r\n    }\r\n    const onErr = async (err) => {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n\r\n    try {\r\n      init()\r\n    } catch (err) {\r\n      onErr(err)\r\n    }\r\n  }, [dispatch])\r\n\r\n  //\r\n  const createNewOrder = () => {\r\n    if (currentOrder.items.length > 0) {\r\n      history.push('/my-order')\r\n    } else {\r\n      history.push('/menu')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className='pt-5'>\r\n\r\n      {/* Order Page Header */}\r\n      <div className='d-flex justify-content-between'>\r\n        <h1 className='m-0'>Orders</h1>\r\n        <Button onClick={createNewOrder} variant='outline-secondary'>\r\n          {currentOrder.items && currentOrder.items.length > 0 ? 'CURRENT ORDER' : 'NEW ORDER'}\r\n        </Button>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      {/* All Orders */}\r\n      <OrdersList orders={orders} />\r\n\r\n      {/* Modal Component */}\r\n      <ItemCustomizationModal\r\n        item={selectedItem}\r\n        setItem={setSelectedItem}\r\n        show={showCustomize}\r\n        setShow={setShowCustomize}\r\n      />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default OrdersPage\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport Costs from './Costs'\r\nimport OrderDetailsForm from './OrderDetailsForm'\r\nimport OrderItems from './OrderItems'\r\nimport ItemCustomizationModal from '../menu/ItemCustomizationModal'\r\n\r\nimport useForm from '../../hooks/useForm'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { resetCurrentOrder } from '../../reducers/currentOrderReducer'\r\nimport { addOrderActionCreator, updateOrderActionCreator } from '../../reducers/orderReducer'\r\n\r\nconst OrderPage = ({ order }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const currentOrder = useSelector((state) => {\r\n    if (!order) {\r\n      return state.currentOrder\r\n    }\r\n    return order\r\n  })\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n\r\n  const [showCustomize, setShowCustomize] = useState(false)\r\n  const [selectedItem, setSelectedItem] = useState({})\r\n  const [costs, setCosts] = useState({})\r\n\r\n  //\r\n  const getDefaultOrderName = () => {\r\n    let defaultName\r\n\r\n    if (currentOrder.name) {\r\n      defaultName = currentOrder.name\r\n    } else if (currentUser) {\r\n      defaultName = currentUser.name\r\n    } else if (currentOrder && currentOrder.items.length > 0) {\r\n      const itemWhosIndex = currentOrder.items.findIndex((elem) => elem.whos !== '')\r\n\r\n      console.log('itemswhosindex', itemWhosIndex)\r\n\r\n      if (itemWhosIndex !== -1) {\r\n        defaultName = currentOrder.items[itemWhosIndex].whos\r\n      }\r\n      defaultName = ''\r\n    }\r\n    return defaultName\r\n  }\r\n\r\n  //\r\n  const [form, setForm, errors, isValidated, resetForm] = useForm({\r\n    orderCategory: currentOrder.category || 'Carry Out',\r\n    orderName: getDefaultOrderName() || '',\r\n    orderNotes: currentOrder.notes || '',\r\n  })\r\n\r\n  //\r\n  const cancelOrderSequence = () => {\r\n    dispatch(resetCurrentOrder())\r\n    resetForm()\r\n    history.push('/menu')\r\n  }\r\n\r\n  //\r\n  const saveOrder = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (currentOrder.items.length < 1) {\r\n      await dispatch(toastAlertCreator({ message: 'No items in order!' }))\r\n      // history.push('/menu')\r\n    } else if (isValidated()) {\r\n      try {\r\n        const orderObject = {\r\n          category: form.orderCategory,\r\n          items: currentOrder.items,\r\n          name: form.orderName,\r\n          notes: form.orderNotes,\r\n          costs: {\r\n            subTotal: costs.subTotal,\r\n            taxRate: costs.taxRate,\r\n            taxAmount: costs.taxAmount,\r\n            total: costs.total,\r\n          },\r\n        }\r\n\r\n        if (currentOrder.isUpdating) {\r\n          await dispatch(updateOrderActionCreator(currentOrder._id, orderObject))\r\n        } else {\r\n          await dispatch(addOrderActionCreator(orderObject))\r\n        }\r\n\r\n        await dispatch(resetCurrentOrder())\r\n        resetForm()\r\n        history.push('/order-confirmed')\r\n      } catch (err) {\r\n        await dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className='pt-5'>\r\n      <div className='d-flex justify-content-between'>\r\n        <h1 className='m-0'>\r\n          {currentOrder.name ? `${currentOrder.name}'s Order` : 'Your Order'}\r\n        </h1>\r\n\r\n        <h6 className='align-self-center m-0'>\r\n          {currentOrder._id ? `ID: ${currentOrder._id}` : null}\r\n        </h6>\r\n\r\n        {/* Menu Button */}\r\n        <Button\r\n          onClick={() => history.push('/menu')}\r\n          variant='outline-secondary'\r\n        >\r\n          Menu\r\n        </Button>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      {/* Order Form with Category, Name, Notes */}\r\n      <OrderDetailsForm\r\n        form={form}\r\n        setForm={setForm}\r\n        errors={errors}\r\n      />\r\n\r\n      <hr />\r\n\r\n      {/* List of Items in Order */}\r\n      <OrderItems\r\n        setSelectedItem={setSelectedItem}\r\n        setShowCustomize={setShowCustomize}\r\n      />\r\n\r\n      {/* Order Costs Display */}\r\n      <Costs setCosts={setCosts} />\r\n\r\n      <hr style={{ marginTop: '8px' }} />\r\n\r\n      {/* Order Option Buttons */}\r\n      <div className='d-flex justify-content-between'>\r\n\r\n        {/* Cancel Order Button */}\r\n        <Button\r\n          variant='outline-warning'\r\n          onClick={cancelOrderSequence}\r\n        >\r\n          Cancel\r\n        </Button>\r\n\r\n        <div>\r\n          {/* Add More Items to Order Button */}\r\n          <Button\r\n            onClick={() => history.push('/menu')}\r\n            className='mx-2'\r\n            variant='outline-secondary'\r\n          >\r\n            Add More\r\n          </Button>\r\n\r\n          {/* Save Updates or Checkout Button */}\r\n          <Button\r\n            className='mx-2'\r\n            onClick={saveOrder}\r\n          >\r\n            {currentOrder.isUpdating ? 'Save Updates' : 'Checkout'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal Component for Item Customization */}\r\n      <ItemCustomizationModal\r\n        item={selectedItem}\r\n        setItem={setSelectedItem}\r\n        show={showCustomize}\r\n        setShow={setShowCustomize}\r\n        isUpdating\r\n      />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default OrderPage\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst MyAccountPage = () => {\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n\r\n  return (\r\n    <Container className='pt-5'>\r\n      <div className='d-flex justify-content-between'>\r\n        <h1 className='m-0'>My Account</h1>\r\n        <h1>{currentUser.name}</h1>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <p>{`Name: ${currentUser.name}`}</p>\r\n      <p>{`Email: ${currentUser.email}`}</p>\r\n      <p>{`Username: ${currentUser.username}`}</p>\r\n      <p>{`Role: ${currentUser.role.name}`}</p>\r\n\r\n      <h2 className='pt-5'>Previous Orders</h2>\r\n\r\n      <hr />\r\n\r\n      {\r\n        currentUser.orders && currentUser.orders.map((order) => (\r\n          <div key={order._id}>\r\n            <div className='d-flex justify-content-between'>\r\n              <div>\r\n                <h4>\r\n                  {`${new Date(order.updatedAt).toLocaleString()}`}\r\n                </h4>\r\n                <h6>{`ID: ${order._id}`}</h6>\r\n              </div>\r\n\r\n              <div className='text-right'>\r\n                <h2>{order.category}</h2>\r\n                <h4>\r\n                  {`Items: ${order.items && order.items.length}`}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='d-flex justify-content-between'>\r\n              <p>{`Notes: ${order.notes}`}</p>\r\n\r\n              <p className='m-0 text-right'>\r\n                {`Total: ${order.costs.total}`}\r\n              </p>\r\n            </div>\r\n\r\n            <hr />\r\n          </div>\r\n        ))\r\n      }\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MyAccountPage\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport AlertBanner from '../site-wide/AlertBanner'\r\nimport { userForms } from '../../configurations/formConfigs'\r\nimport useForm from '../../hooks/useForm'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport { addUserActionCreator } from '../../reducers/userReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst NewUserForm = ({ show, setShow }) => {\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n\r\n  const [form, setForm, errors, isValidated, resetForm] = useForm({\r\n    usersName: '', email: '', username: '', roleName: 'user',\r\n  })\r\n\r\n  //\r\n  const resetComponent = async () => {\r\n    resetForm()\r\n    setShow(false)\r\n    await dispatch(isVisible(false))\r\n  }\r\n\r\n  //\r\n  const createUser = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (isValidated()) {\r\n      try {\r\n        const newUserObject = {\r\n          name: form.usersName,\r\n          email: form.email,\r\n          username: form.username,\r\n          password: 'password',\r\n          role: {\r\n            name: form.roleName,\r\n          },\r\n        }\r\n\r\n        await dispatch(addUserActionCreator(newUserObject, currentUser))\r\n\r\n        resetComponent()\r\n      } catch (err) {\r\n        dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={resetComponent}\r\n      backdrop='static'\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add A New User</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <AlertBanner />\r\n\r\n      <Modal.Body>\r\n        <Form id='newUserForm'>\r\n          <Form.Group>\r\n            <Form.Label>Full Name:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              value={form.usersName.trimStart()}\r\n              maxLength={userForms.usersName.maxLength.value.toString()}\r\n              placeholder='Jane Doe'\r\n              onChange={({ target }) => setForm('usersName', target.value)}\r\n              isInvalid={!!errors.usersName}\r\n            />\r\n            <Form.Text>\r\n              {charactersRemaining(\r\n                form.usersName, userForms.usersName.maxLength.value,\r\n              )}\r\n            </Form.Text>\r\n\r\n            <Form.Control.Feedback type='invalid'>\r\n              { errors.usersName }\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              value={form.email.trimStart()}\r\n              minLength={userForms.email.minLength.value.toString()}\r\n              maxLength={userForms.email.maxLength.value.toString()}\r\n              placeholder='abc@123.com'\r\n              onChange={({ target }) => setForm('email', target.value)}\r\n              isInvalid={!!errors.email}\r\n            />\r\n            <Form.Text>\r\n              {charactersRemaining(\r\n                form.email, userForms.email.maxLength.value,\r\n              )}\r\n            </Form.Text>\r\n\r\n            <Form.Control.Feedback type='invalid'>\r\n              { errors.email }\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Username:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              value={form.username.trimStart()}\r\n              minLength={userForms.username.minLength.value.toString()}\r\n              maxLength={userForms.username.maxLength.value.toString()}\r\n              onChange={({ target }) => setForm('username', target.value)}\r\n              isInvalid={!!errors.username}\r\n            />\r\n            <Form.Text>\r\n              {charactersRemaining(\r\n                form.username, userForms.username.maxLength.value,\r\n              )}\r\n            </Form.Text>\r\n\r\n            <Form.Control.Feedback type='invalid'>\r\n              { errors.username }\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Role:</Form.Label>\r\n            <div className='px-4 d-flex justify-content-between'>\r\n              <Form.Check\r\n                inline\r\n                label='Admin'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-admin'\r\n                checked={form.roleName === 'admin'}\r\n                value='admin'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label='Manager'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-manager'\r\n                checked={form.roleName === 'manager'}\r\n                value='manager'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label='Employee'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-employee'\r\n                checked={form.roleName === 'employee'}\r\n                value='employee'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label='User'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-user'\r\n                checked={form.roleName === 'user'}\r\n                value='user'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n            </div>\r\n            {\r\n              errors.roleName\r\n              && <small style={{ color: '#dc3545' }}>{ errors.roleName }</small>\r\n            }\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button type='submit' onClick={createUser}>Create User</Button>\r\n        <Button variant='secondary' onClick={resetComponent}>Cancel</Button>\r\n      </Modal.Footer>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NewUserForm\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport AlertBanner from '../site-wide/AlertBanner'\r\nimport useForm from '../../hooks/useForm'\r\nimport { userForms } from '../../configurations/formConfigs'\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport { updateUserActionCreator } from '../../reducers/userReducer'\r\nimport charactersRemaining from '../../utilities/charactersRemaining'\r\n\r\nconst UpdateUserForm = ({ user, show, setShow }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [form, setForm, errors, isValidated, resetForm] = useForm({\r\n    usersName: user.name,\r\n    email: user.email,\r\n    username: user.username,\r\n    roleName: user.role.name,\r\n  })\r\n\r\n  //\r\n  const resetComponent = async () => {\r\n    resetForm()\r\n    setShow(false)\r\n    await dispatch(isVisible(false))\r\n  }\r\n\r\n  //\r\n  const updateUser = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (isValidated()) {\r\n      try {\r\n        const updatedUserObject = {\r\n          ...user,\r\n          name: form.usersName,\r\n          email: form.email,\r\n          username: form.username,\r\n          password: null,\r\n          role: {\r\n            name: form.roleName,\r\n          },\r\n        }\r\n\r\n        await dispatch(updateUserActionCreator(user.id, updatedUserObject))\r\n\r\n        resetComponent()\r\n      } catch (err) {\r\n        dispatch(toastAlertCreator(err))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={resetComponent}\r\n      backdrop='static'\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {`Update ${user.username}`}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <AlertBanner />\r\n\r\n      <Modal.Body>\r\n        <Form id='newUserForm'>\r\n          <Form.Group>\r\n            <Form.Label>Full Name:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              value={form.usersName}\r\n              maxLength={userForms.usersName.maxLength.value.toString()}\r\n              placeholder='Jane Doe'\r\n              onChange={({ target }) => setForm('usersName', target.value)}\r\n              isInvalid={!!errors.usersName}\r\n            />\r\n            <Form.Text>\r\n              {charactersRemaining(\r\n                form.usersName, userForms.usersName.maxLength.value,\r\n              )}\r\n            </Form.Text>\r\n\r\n            <Form.Control.Feedback type='invalid'>\r\n              { errors.usersName }\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              value={form.email.trimStart()}\r\n              minLength={userForms.email.minLength.value.toString()}\r\n              maxLength={userForms.email.maxLength.value.toString()}\r\n              placeholder='abc@123.com'\r\n              onChange={({ target }) => setForm('email', target.value)}\r\n              isInvalid={!!errors.email}\r\n            />\r\n            <Form.Text>\r\n              {charactersRemaining(\r\n                form.email, userForms.email.maxLength.value,\r\n              )}\r\n            </Form.Text>\r\n\r\n            <Form.Control.Feedback type='invalid'>\r\n              { errors.email }\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Username:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              value={form.username.trimStart()}\r\n              minLength={userForms.username.minLength.value.toString()}\r\n              maxLength={userForms.username.maxLength.value.toString()}\r\n              onChange={({ target }) => setForm('username', target.value)}\r\n              isInvalid={!!errors.username}\r\n            />\r\n            <Form.Text>\r\n              {charactersRemaining(\r\n                form.username, userForms.username.maxLength.value,\r\n              )}\r\n            </Form.Text>\r\n\r\n            <Form.Control.Feedback type='invalid'>\r\n              { errors.username }\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Role:</Form.Label>\r\n            <div className='px-4 d-flex justify-content-between'>\r\n              <Form.Check\r\n                inline\r\n                label='Admin'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-admin'\r\n                checked={form.roleName === 'admin'}\r\n                value='admin'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label='Manager'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-manager'\r\n                checked={form.roleName === 'manager'}\r\n                value='manager'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label='Employee'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-employee'\r\n                checked={form.roleName === 'employee'}\r\n                value='employee'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label='User'\r\n                name='roles'\r\n                type='radio'\r\n                id='inline-radio-user'\r\n                checked={form.roleName === 'user'}\r\n                value='user'\r\n                onChange={({ target }) => setForm('roleName', target.value)}\r\n                isInvalid={!!errors.roleName}\r\n              />\r\n            </div>\r\n            {\r\n              errors.roleName\r\n              && <small style={{ color: '#dc3545' }}>{ errors.roleName }</small>\r\n            }\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button type='submit' onClick={updateUser}>Save Updates</Button>\r\n        <Button variant='secondary' onClick={resetComponent}>Cancel</Button>\r\n      </Modal.Footer>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UpdateUserForm\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport UpdateUserForm from './UpdateUserForm'\r\n\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport { deleteUserActionCreator } from '../../reducers/userReducer'\r\n\r\nconst UserInfo = ({ user }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false)\r\n\r\n  //\r\n  const deleteUser = async (id) => {\r\n    try {\r\n      await dispatch(deleteUserActionCreator(id))\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  //\r\n  const updateUser = async () => {\r\n    setShowUpdateModal(true)\r\n    await dispatch(isVisible(true))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between'>\r\n        <div>\r\n          <h2>{user.username}</h2>\r\n          <p>{user.role && user.role.name}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            onClick={updateUser}\r\n            size='sm'\r\n            variant='outline-secondary'\r\n          >\r\n            UPDATE\r\n          </Button>\r\n          <Button\r\n            onClick={() => deleteUser(user.id)}\r\n            size='sm'\r\n            variant='outline-secondary'\r\n          >\r\n            DELETE\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal Component */}\r\n      <UpdateUserForm\r\n        user={user}\r\n        show={showUpdateModal}\r\n        setShow={setShowUpdateModal}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport UserInfo from './UserInfo'\r\n\r\nconst UsersList = () => {\r\n  const users = useSelector((state) => state.users)\r\n\r\n  const [sortedUsers, setSortedUsers] = useState(users)\r\n\r\n  //\r\n  const sortByRole = (usersArray) => {\r\n    const sortBy = ['admin', 'manager', 'employee', 'user', 'guest']\r\n\r\n    const usersCopy = [...usersArray]\r\n    // .slice() doesn't make deep copy needed for .role.name, must create our own\r\n\r\n    return usersCopy.sort((a, b) => (\r\n      sortBy.indexOf(a.role.name) - sortBy.indexOf(b.role.name)\r\n    ))\r\n  }\r\n\r\n  //\r\n  useEffect(() => {\r\n    const roleSortedUsers = sortByRole(users)\r\n\r\n    setSortedUsers(roleSortedUsers)\r\n  }, [users])\r\n\r\n  return (\r\n    <div>\r\n      {users && sortedUsers.map((user) => <UserInfo key={user.id} user={user} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nimport NewUserForm from './NewUserForm'\r\nimport UsersList from './UsersList'\r\n\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { isVisible } from '../../reducers/modalReducer'\r\nimport { initializeUsers } from '../../reducers/userReducer'\r\n\r\nconst UsersPage = () => {\r\n  const dispatch = useDispatch()\r\n  const [show, setShow] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await dispatch(initializeUsers())\r\n    }\r\n    const onErr = async (err) => {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n\r\n    try {\r\n      init()\r\n    } catch (err) {\r\n      onErr(err)\r\n    }\r\n  })\r\n\r\n  //\r\n  const handleNewUserClick = async () => {\r\n    setShow(true)\r\n    await dispatch(isVisible(true))\r\n  }\r\n\r\n  return (\r\n    <Container className='pt-5'>\r\n      <div className='d-flex justify-content-between'>\r\n        <h1 className='m-0'>Users Page</h1>\r\n        <Button onClick={handleNewUserClick} variant='outline-secondary'>\r\n          NEW USER\r\n        </Button>\r\n      </div>\r\n\r\n      <NewUserForm show={show} setShow={setShow} />\r\n      <hr />\r\n      <UsersList />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UsersPage\r\n","import { useSelector } from 'react-redux'\r\n\r\nconst AlertVisWrapper = ({ children }) => {\r\n  /*\r\n    A wrapper component to hide or show children components if the modalOpen\r\n    state is true or false, respectively.\r\n  */\r\n  const modalIsVisible = useSelector((state) => state.modalOpen)\r\n\r\n  return modalIsVisible\r\n    ? null\r\n    : children\r\n}\r\n\r\nexport default AlertVisWrapper\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst AuthRoute = (props) => {\r\n  const { authGroup } = props\r\n\r\n  const userRoles = useSelector(\r\n    (state) => ((state.currentUser && state.currentUser.role)\r\n      ? state.currentUser.role.encompassedRoles\r\n      : []),\r\n  )\r\n\r\n  // Encompassing roles i.e. a manager is every other role sans admin\r\n  const authorizations = {\r\n    admin: ['admin', 'manager', 'employee', 'user', 'guest'],\r\n    manager: ['manager', 'employee', 'user', 'guest'],\r\n    employee: ['employee', 'user', 'guest'],\r\n    user: ['user', 'guest'],\r\n    guest: ['guest'],\r\n  }\r\n\r\n  // Redirect or render if currentUser hass all roles required for access\r\n  if (authorizations[authGroup].every((role) => userRoles.includes(role))) {\r\n    /* eslint-disable react/jsx-props-no-spreading */\r\n    return <Route {...props} />\r\n  }\r\n  return <Redirect to='/' />\r\n}\r\n\r\nexport default AuthRoute\r\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// Credit to Zurfyx:\r\n// https://stackoverflow.com/questions/36904185/react-router-scroll-to-top-on-every-transition\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0)\r\n    })\r\n\r\n    return () => {\r\n      unlisten()\r\n    }\r\n  }, [history])\r\n\r\n  return (null)\r\n}\r\n\r\nexport default withRouter(ScrollToTop)\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nconst SiteFooter = () => (\r\n  <footer className='mt-5 p-5' style={{ backgroundColor: '#ff5959', height: '200px' }}>\r\n    <Container>\r\n      <Row>\r\n\r\n        <Col>\r\n          <h6>Quick Links</h6>\r\n          <Nav className='flex-column'>\r\n            <Nav.Link as={Link} to='/' className='p-0 text-light'>Home</Nav.Link>\r\n            <Nav.Link as={Link} to='/menu' className='p-0 text-light'>Menu</Nav.Link>\r\n            <Nav.Link as={Link} to='/my-order' className='p-0 text-light'>My Order</Nav.Link>\r\n          </Nav>\r\n        </Col>\r\n\r\n        <Col>\r\n          <h6>Admin Links</h6>\r\n          <Nav className='flex-column'>\r\n            <Nav.Link as={Link} to='/orders' className='p-0 text-light'>Orders</Nav.Link>\r\n            <Nav.Link as={Link} to='/items' className='p-0 text-light'>Items</Nav.Link>\r\n            <Nav.Link as={Link} to='/users' className='p-0 text-light'>Users</Nav.Link>\r\n          </Nav>\r\n        </Col>\r\n\r\n        <Col>\r\n          <h6>About</h6>\r\n          <p className='text-light'>Words Here</p>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Container>\r\n  </footer>\r\n)\r\n\r\nexport default SiteFooter\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n\r\n    // Call right away to update state with initial window size\r\n    handleResize()\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return windowSize\r\n}\r\n\r\nexport default useWindowSize\r\n","import React from 'react'\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport LoginForm from '../login-register-landing/LoginForm'\r\nimport useWindowSize from '../../hooks/useWindowSize'\r\n\r\nconst LoginModal = ({ show, setShow }) => {\r\n  const windowSize = useWindowSize()\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={() => setShow(false)}\r\n      className='p-0'\r\n      dialogClassName={windowSize.width < 576 ? '' : 'modal-20w mr-5'}\r\n      fullscreen={windowSize.width < 576 ? 'below-sm-down' : ''}\r\n      keyboard={false}\r\n      scrollable\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Login</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <LoginForm setShow={setShow} />\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <p>\r\n          Not a member?\r\n          <a href='/'> Register today!</a>\r\n        </p>\r\n\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LoginModal\r\n","import React from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst LoginButton = ({ setShow }) => (\r\n  <Button\r\n    onClick={() => setShow(true)}\r\n    variant='outline-secondary'\r\n    size='sm'\r\n  >\r\n    Login\r\n  </Button>\r\n)\r\n\r\nexport default LoginButton\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { toastAlertCreator } from '../../reducers/alertReducer'\r\nimport { logoutUserActionCreator } from '../../reducers/currentUserReducer'\r\n\r\nconst LogoutButton = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await dispatch(logoutUserActionCreator())\r\n      history.push('/')\r\n    } catch (err) {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleLogout}\r\n      variant='outline-secondary'\r\n      size='sm'\r\n    >\r\n      Logout\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default LogoutButton\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nimport LoginModal from './LoginModal'\r\n\r\nimport LoginButton from './LoginButton'\r\nimport LogoutButton from './LogoutButton'\r\n\r\nconst SiteNavBar = () => {\r\n  const [showLoginModal, setShowLoginModal] = useState(false)\r\n\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n\r\n  const userRoles = useSelector((state) => ((state.currentUser && state.currentUser.role)\r\n    ? state.currentUser.role.encompassedRoles\r\n    : []))\r\n\r\n  const authGroups = [\r\n    'admin',\r\n    'manager',\r\n    'employee',\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand='lg' sticky='top' bg='warning' variant='light'>\r\n        <Navbar.Brand as={Link} to='/'>Nodo-Manager</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n          <Nav className='mr-auto'>\r\n            <Nav.Link eventKey='1' as={Link} to='/menu'>Menu</Nav.Link>\r\n            { currentUser && <Nav.Link eventKey='2' as={Link} to='/my-account'>My Account</Nav.Link>}\r\n            <Nav.Link eventKey='3' as={Link} to='/my-order'>My Order</Nav.Link>\r\n          </Nav>\r\n\r\n          {/* Conditionally render links, if user belongs to one of authGroups */}\r\n          {\r\n            authGroups.some((group) => userRoles.includes(group))\r\n              ? (\r\n                <Nav className='ml-auto border-right border-secondary'>\r\n                  <Nav.Link eventKey='4' as={Link} to='/orders'>Orders</Nav.Link>\r\n                  <Nav.Link eventKey='5' as={Link} to='/items'>Items</Nav.Link>\r\n                  <Nav.Link eventKey='6' as={Link} to='/users'>Users</Nav.Link>\r\n                </Nav>\r\n              )\r\n              : null\r\n          }\r\n\r\n          {/* Conditionally render login/logout button for the currentUser */}\r\n          {\r\n            currentUser\r\n              ? (\r\n                <>\r\n                  <Navbar.Text className='px-2'>\r\n                    <small>\r\n                      {`Signed in as: ${currentUser.username}`}\r\n                    </small>\r\n                  </Navbar.Text>\r\n                  <LogoutButton />\r\n                </>\r\n              )\r\n              : <LoginButton setShow={setShowLoginModal} />\r\n          }\r\n\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      {/* Modal Login Window */}\r\n      <LoginModal show={showLoginModal} setShow={setShowLoginModal} />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SiteNavBar\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  // useRouteMatch,\r\n} from 'react-router-dom'\r\n\r\nimport { toastAlertCreator } from './reducers/alertReducer'\r\nimport { initializeItems } from './reducers/itemReducer'\r\nimport { resetOrders } from './reducers/orderReducer'\r\nimport { resetUsers } from './reducers/userReducer'\r\n\r\nimport HomePage from './components/login-register-landing/HomePage'\r\nimport ItemsPage from './components/items/ItemsPage'\r\nimport MenuPage from './components/menu/MenuPage'\r\nimport OrderConfirmationPage from './components/orders/OrderConfirmationPage'\r\nimport OrdersPage from './components/orders/OrdersPage'\r\nimport OrderPage from './components/orders/OrderPage'\r\nimport MyAccountPage from './components/users/MyAccountPage'\r\nimport UsersPage from './components/users/UsersPage'\r\nimport AlertBanner from './components/site-wide/AlertBanner'\r\nimport AlertVisWrapper from './components/site-wide/AlertVisWrapper'\r\nimport AuthRoute from './components/site-wide/AuthRoute'\r\nimport ScrollToTop from './components/site-wide/ScrollToTop'\r\nimport SiteFooter from './components/site-wide/SiteFooter'\r\nimport SiteNavBar from './components/site-wide/SiteNavBar'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector((state) => state.currentUser)\r\n  // const orders = useSelector((state) => state.orders)\r\n\r\n  useEffect(() => {\r\n    const resets = async () => {\r\n      await dispatch(resetOrders())\r\n      await dispatch(resetUsers())\r\n    }\r\n\r\n    const inits = async () => {\r\n      await dispatch(initializeItems())\r\n    }\r\n\r\n    const onErr = async (err) => {\r\n      await dispatch(toastAlertCreator(err))\r\n    }\r\n\r\n    try {\r\n      resets()\r\n      inits()\r\n    } catch (err) {\r\n      onErr(err)\r\n    }\r\n  }, [dispatch, currentUser])\r\n\r\n  // finds order with id matching route\r\n  // const orderMatch = useRouteMatch('/orders/:id')\r\n  // const orderToView = orderMatch\r\n  //   ? orders.find((order) => order.id === orderMatch.params.id)\r\n  //   : null\r\n\r\n  return (\r\n    <>\r\n      <SiteNavBar />\r\n\r\n      <AlertVisWrapper>\r\n        <AlertBanner />\r\n      </AlertVisWrapper>\r\n\r\n      <div style={{ minHeight: 'calc(100vh - 200px)' }}>\r\n        <ScrollToTop />\r\n        <Switch>\r\n\r\n          <AuthRoute path='/items' authGroup='employee'>\r\n            <ItemsPage />\r\n          </AuthRoute>\r\n\r\n          <Route path='/menu'>\r\n            <MenuPage />\r\n          </Route>\r\n\r\n          <Route path='/my-order'>\r\n            <OrderPage />\r\n          </Route>\r\n\r\n          <Route path='/order-confirmed'>\r\n            <OrderConfirmationPage />\r\n          </Route>\r\n\r\n          {/*\r\n          <Route path='/orders/:id'>\r\n            <OrderPage order={orderToView} />\r\n          </Route>\r\n          */}\r\n\r\n          <AuthRoute path='/orders' authGroup='employee'>\r\n            <OrdersPage />\r\n          </AuthRoute>\r\n\r\n          <AuthRoute path='/my-account' authGroup='user'>\r\n            <MyAccountPage />\r\n          </AuthRoute>\r\n\r\n          <AuthRoute path='/users' authGroup='employee'>\r\n            <UsersPage />\r\n          </AuthRoute>\r\n\r\n          <Route path='/'>\r\n            <HomePage />\r\n          </Route>\r\n\r\n          <Route path='*'>\r\n            <h2>Not Found</h2>\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n\r\n      <SiteFooter />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport alertReducer from './reducers/alertReducer'\r\nimport currentOrderReducer from './reducers/currentOrderReducer'\r\nimport currentUserReducer from './reducers/currentUserReducer'\r\nimport itemReducer from './reducers/itemReducer'\r\nimport modalReducer from './reducers/modalReducer'\r\nimport orderReducer from './reducers/orderReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  alert: alertReducer,\r\n  currentOrder: currentOrderReducer,\r\n  currentUser: currentUserReducer,\r\n  items: itemReducer,\r\n  modalOpen: modalReducer,\r\n  orders: orderReducer,\r\n  users: userReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ),\r\n)\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  store.subscribe(() => {\r\n    const storeNow = store.getState()\r\n    console.log('STORENOW', storeNow)\r\n  })\r\n}\r\n\r\nexport default store\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport App from './App'\r\nimport store from './store'\r\nimport './index.css'\r\n\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\n// Request logger\r\nif (process.env.NODE_ENV !== 'production') {\r\n  axios.interceptors.request.use((req) => {\r\n    console.log(`AXIOS REQ: ${req.method} ${req.url}`)\r\n    return req\r\n  })\r\n}\r\n\r\n// Response/Error logger\r\nif (process.env.NODE_ENV !== 'production') {\r\n  axios.interceptors.response.use(\r\n    (res) => {\r\n      console.log(`AXIOS RES: ${res.method} ${res.url}`)\r\n      return res\r\n    },\r\n    (err) => {\r\n      console.log('AXIOS ERR: ', err.response)\r\n      throw err\r\n    },\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// Easy form customization, alphabetical within group\r\n\r\n//\r\nconst itemForms = {\r\n\r\n  itemAvailability: {\r\n    isEmpty: { errorMessage: 'Choose an availability.' },\r\n  },\r\n\r\n  itemCategory: {\r\n    isEmpty: { errorMessage: 'An item category is required.' },\r\n    maxLength: { value: 50, errorMessage: 'Category is too long.' },\r\n  },\r\n\r\n  itemDescription: {\r\n    maxLength: { value: 150, errorMessage: 'Description is too long!' },\r\n  },\r\n\r\n  itemIngredients: {\r\n    maxLength: {\r\n      value: 250,\r\n      errorMessage: 'Ingredients list has too many characters.',\r\n    },\r\n  },\r\n\r\n  itemName: {\r\n    isEmpty: { errorMessage: 'An item name is required.' },\r\n    maxLength: { value: 50, errorMessage: 'Item name is too long' },\r\n  },\r\n\r\n  itemPrice: {\r\n    isEmpty: { errorMessage: 'A price is required.' },\r\n    isNaN: { errorMessage: 'Price must be a number.' },\r\n    isNegative: { errorMessage: 'Price cannot be negative.' },\r\n    maxLength: { value: 10, errorMessage: 'Price is too large.' },\r\n  },\r\n}\r\n\r\n//\r\nconst orderForms = {\r\n  orderCategory: {\r\n    isEmpty: { errorMessage: 'A Category is required.' },\r\n  },\r\n\r\n  orderName: {\r\n    isEmpty: { errorMessage: 'An Order Name is required.' },\r\n    minLength: { value: 3, errorMessage: 'Order Name is too short' },\r\n    maxLength: { value: 30, errorMessage: 'Order Name is too long' },\r\n  },\r\n\r\n  orderNotes: {\r\n    maxLength: { value: 150, errorMessage: 'Order Notes are too long' },\r\n  },\r\n}\r\n\r\n//\r\nconst userForms = {\r\n  email: {\r\n    isEmpty: { errorMessage: 'Enter an email!' },\r\n    noAtSymbol: { errorMessage: 'Email must include \\'@\\'' },\r\n    minLength: { value: 5, errorMessage: 'Email is too short' },\r\n    maxLength: { value: 50, errorMessage: 'Email is too long' },\r\n  },\r\n\r\n  passcopy: {\r\n    isEmpty: { errorMessage: 'Reenter your password!' },\r\n    mismatched: { errorMessage: 'Passwords do not match!' },\r\n  },\r\n\r\n  password: {\r\n    isEmpty: { errorMessage: 'Enter a password!' },\r\n    minLength: { value: 5, errorMessage: 'Password is too short' },\r\n    maxLength: { value: 50, errorMessage: 'Password is too long' },\r\n  },\r\n\r\n  roleName: {\r\n    isEmpty: { errorMessage: 'A role must be selected.' },\r\n    reqAdmin: { errorMessage: 'Requires Admin privileges.' },\r\n    reqManager: { errorMessage: 'Requires Manager privileges.' },\r\n    reqEmployee: { errorMessage: 'Requires Employee privileges.' },\r\n  },\r\n\r\n  username: {\r\n    isEmpty: { errorMessage: 'Enter a username!' },\r\n    minLength: { value: 2, errorMessage: 'Username is too short' },\r\n    maxLength: { value: 30, errorMessage: 'Username is too long' },\r\n  },\r\n\r\n  usersName: {\r\n    isEmpty: { errorMessage: 'A Name is required.' },\r\n    maxLength: { value: 50, errorMessage: 'Name is too long' },\r\n  },\r\n}\r\n\r\nconst formGroups = {\r\n  itemForms,\r\n  orderForms,\r\n  userForms,\r\n}\r\n\r\nmodule.exports = formGroups\r\n"],"sourceRoot":""}