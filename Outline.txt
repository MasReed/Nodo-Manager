# Nodo Manager Web Application

Backend
  -Control (node/express)

    -Admin (all crud ops)
      -Menu Items
      -Costs
      -Ingredients/Recipes?

    -User
      -Get menu items
      -Get item Costs
      -Get ingredients list?

  -Data (mongoDB/mongoose)
    Menu items, cost, ingredients
    Orders/Sales


Frontend (React)
  -Control
    -Admin interface
    -User interface
      -create orders
      -calculate purchases


--------------------------------------
Procedure
--------------------------------------
+ setup basic node/express
+ setup MongoDB/Mongoose and schemas
  + Implement orders schema
    + add in: orderName, orderCategory, orderDescription, onMenu
  + CRUD operations for items/users API backend
    - express async error handling
+ CRUD ops for frontend
  +items
    +itemService comms working
    +create a form to add new item
    +create a form/way to update items
  +orders
    +orderService comms working
  +users
    +userService comms working
    +create user form
+ Frontend Routing w/ react-router-dom
- Frontend uses/design
  + item CardDeck layout -> autowrap?
  + implement 'Shopping Cart' / current order
  + implement add to order -> modal item modification
  + complete cart reducer with update/delete functionality
  + reflect in front end on my-order page
  + include redirect navigation for item edits in myOrder
  + calculate totals
  + abstract order page components
  - create order confirmation page and redirect to it
  - update orders page / editing ability
  + footer sitemap links
  - component abstractions
  + unify page layouts/padding
  - stylize new item form
  - make itemInfo/card responsive
  - Make users page functional

- update this list
- Unit Testing backend
- Unit Testing frontend
- implement linter/rules
